<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>School on Hamhuo</title>
    <link>https://example.docsy.dev/categories/school/</link>
    <description>Recent content in School on Hamhuo</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://example.docsy.dev/categories/school/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>159.225 Assignment1</title>
      <link>https://example.docsy.dev/school/159.225/assignment1/assignment1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/school/159.225/assignment1/assignment1/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Aware of content healthy and reduce translate to English - Translate and reduce AI similarity&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;part1---assumptions--background&#34;&gt;Part1 - Assumptions &amp;amp; Background&lt;/h4&gt;&#xA;&lt;h4 id=&#34;part2---system-request&#34;&gt;Part2 - System Request&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250418094911347.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;==Q1: Description and Background? (sponsor)==&#xA;==Q2: Missing Mail introduce==&#xA;==C1: Delete option report function==&#xA;==C2: Assume different system has been used by IT depatement for a while==&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#2f1e2e;background-color:#e7e9db;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-plain&#34; data-lang=&#34;plain&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Project Sponsor: John smith from IT unit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Business Need: Five charities have been merged, each with its own system for tracking donors, donations, and communication. Complaints received from operations staff regarding complex processes and difficult management; and from donors regarding missing information, lack of feedback channels after donations, and delays in tracking donations; as well as the absence of a unified email system, making it difficult to attract potential donors.There is a need to create a system with single, unified database and mail function.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Business Requirements: The new system should be able to integrate donor details from all five previous systems, including information on potential and actual donors. It will track all donations made to the merged charity, regardless of the original charity&amp;#39;s source. The system will also contain a integrated mail function as conmmunicating method to consolidating various methods used by individual charities&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Business Value: reduce the administrative burden of managing multiple systems (by 40% in 5 month)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;attract potential donors&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rapid responce as well as tracking donations for donors (Satisfaction will increased by 30%.)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Special Issues or Constraints: Two large - scale systems have complete documentation, the other two have only user - facing documentation. Technical knowledge for these two systems may rely on staff demonstration, which could cause delays in the integration process.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;part3-technical-feasibility-analysis&#34;&gt;Part3 Technical Feasibility analysis&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250418094911348.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>159.225 System Analysis and Modelling</title>
      <link>https://example.docsy.dev/school/159.225/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/school/159.225/</guid>
      <description></description>
    </item>
    <item>
      <title>Assignment1</title>
      <link>https://example.docsy.dev/school/159.261/assignment1/assignment1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/school/159.261/assignment1/assignment1/</guid>
      <description>&lt;h1 id=&#34;snake-game--assignment-1&#34;&gt;Snake Game — Assignment 1&lt;/h1&gt;&#xA;&lt;p&gt;&lt;em&gt;by Hamhuo&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;-introduction&#34;&gt;🕹 Introduction&lt;/h2&gt;&#xA;&lt;p&gt;This project is a classic Snake game implemented using Java AWT and a custom GameEngine. &lt;br&gt;&#xA;The player controls a snake moving on a 25×25 grid, growing longer by eating apples. &lt;br&gt;&#xA;The game ends if the snake hits the wall or collides with itself.&lt;/p&gt;&#xA;&lt;h2 id=&#34;-highlights&#34;&gt;✨ Highlights&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-efficient-direction-control&#34;&gt;1. Efficient Direction Control&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The snake&amp;rsquo;s movement direction is managed using &lt;strong&gt;numeric encoding combined with XOR operations&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Direct reversal (e.g., moving from LEFT to RIGHT immediately) is prevented with a simple and efficient one-line check:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#2f1e2e;background-color:#e7e9db;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#815ba4&#34;&gt;if&lt;/span&gt; ((direction.&lt;span style=&#34;color:#06b6ef&#34;&gt;getValue&lt;/span&gt;() &lt;span style=&#34;color:#5bc4bf&#34;&gt;^&lt;/span&gt; d.&lt;span style=&#34;color:#06b6ef&#34;&gt;getValue&lt;/span&gt;()) &lt;span style=&#34;color:#5bc4bf&#34;&gt;!=&lt;/span&gt; 2) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#815ba4&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#06b6ef&#34;&gt;direction&lt;/span&gt; &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; d;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;This approach is cleaner and more efficient than traditional if-else chains.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2-flexible-speed-and-length-configuration&#34;&gt;2. Flexible Speed and Length Configuration&lt;/h3&gt;&#xA;&lt;p&gt;Before starting the game, a settings dialog allows players to customize:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Assignment2</title>
      <link>https://example.docsy.dev/school/159.261/assignment2/assignment2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/school/159.261/assignment2/assignment2/</guid>
      <description>&lt;h4 id=&#34;solid-代码设计原则&#34;&gt;SOLID 代码设计原则&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515172654852.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;单一职责原则 一个类只有一个需要修改的原因&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515172744932.png&#34; alt=&#34;image.png&#34;&gt;&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515172749149.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;比如邮件类&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515172820208.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;评价一个类的职责是否足够单一，我们并没有一个非常明确的、可以量化的标准，可以说，这是件非常主观、仁者见仁智者见智的事情。实际上，在真正的软件开发中，我们也没必要过于未雨绸缪，过度设计。所以，我们可以&lt;strong&gt;先写一个粗粒度的类，满足业务需求。随着业务的发展，如果粗粒度的类越来越庞大，代码越来越多，这个时候，我们就可以将这个粗粒度的类，拆分成几个更细粒度的类。这就是所谓的持续重构&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;判断原则如下：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;类中的代码行数、函数或者属性过多，会影响代码的可读性和可维护性，我们就需要考虑对类进行拆分&lt;/li&gt;&#xA;&lt;li&gt;类依赖的其他类过多，或者依赖类的其他类过多，不符合高内聚、低耦合的设计思想，我们就需要考虑对类进行拆分&lt;/li&gt;&#xA;&lt;li&gt;私有方法过多，我们就要考虑能否将私有方法独立到新的类中，设置为public方法，共更多的类使用，从而提高代码的复用性&lt;/li&gt;&#xA;&lt;li&gt;比较难给类起一个合适的名字，很难用一个业务名称概况，或者只能用一些笼统的Manager、Context之类的词语来命名，这就说明类的职责定义不够清晰&lt;/li&gt;&#xA;&lt;li&gt;类中大量的方法都是集中操作类的某几个属性，比如，在UserInfo例子中，如果一半的方法都是在操作address信息，那就可以考虑将这几个属性和对应的方法拆分出来。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;设计模式---策略模式&#34;&gt;设计模式 - 策略模式&lt;/h4&gt;&#xA;&lt;p&gt;背景，一款App需要实现支付功能&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515172112955.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515172124545.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515172147703.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515172207073.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515172223095.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;多种模式下必须使用if-else&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515172236297.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515172302010.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;直接修改源码的代码块叫做 反开闭代码块&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515172343358.png&#34; alt=&#34;image.png&#34;&gt;&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515172413406.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515172432734.png&#34; alt=&#34;image.png&#34;&gt;&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515172443925.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515173248867.png&#34; alt=&#34;image.png&#34;&gt;&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515173258893.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;引入策略模式&#xA;在策略模式（Strategy Pattern）中一个类的行为或其算法可以在运行时更改。这种类型的设计模式属于行为型模式。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515173317841.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;拆分类&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515173338724.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;抽象&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515173405965.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;之后作为流程的一部分，隐藏背后细节&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515173514802.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;用户在使用时只需传入相关参数即可&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515173820291.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515173925158.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515174429788.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;其中Context是上下文，负责维护策略类&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515173945739.png&#34; alt=&#34;image.png&#34;&gt;&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515173950880.png&#34; alt=&#34;image.png&#34;&gt;&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515174143860.png&#34; alt=&#34;image.png&#34;&gt;&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515174201635.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;伪代码&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#2f1e2e;background-color:#e7e9db;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8d8687&#34;&gt;// 策略接口声明了某个算法各个不同版本间所共有的操作。上下文会使用该接口来&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8d8687&#34;&gt;// 调用有具体策略定义的算法。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#815ba4&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#fec418&#34;&gt;Strategy&lt;/span&gt; is&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    method &lt;span style=&#34;color:#06b6ef&#34;&gt;execute&lt;/span&gt;(a, b)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#2f1e2e;background-color:#e7e9db;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8d8687&#34;&gt;// 具体策略会在遵循策略基础接口的情况下实现算法。该接口实现了它们在上下文&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8d8687&#34;&gt;// 中的互换性。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#815ba4&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#fec418&#34;&gt;ConcreteStrategyAdd&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;implements&lt;/span&gt; Strategy is&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    method &lt;span style=&#34;color:#06b6ef&#34;&gt;execute&lt;/span&gt;(a, b) is&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#815ba4&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#5bc4bf&#34;&gt;+&lt;/span&gt; b&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#815ba4&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#fec418&#34;&gt;ConcreteStrategySubtract&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;implements&lt;/span&gt; Strategy is&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    method &lt;span style=&#34;color:#06b6ef&#34;&gt;execute&lt;/span&gt;(a, b) is&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#815ba4&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#5bc4bf&#34;&gt;-&lt;/span&gt; b&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#815ba4&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#fec418&#34;&gt;ConcreteStrategyMultiply&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;implements&lt;/span&gt; Strategy is&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    method &lt;span style=&#34;color:#06b6ef&#34;&gt;execute&lt;/span&gt;(a, b) is&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#815ba4&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#5bc4bf&#34;&gt;*&lt;/span&gt; b&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#2f1e2e;background-color:#e7e9db;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8d8687&#34;&gt;// 上下文定义了客户端关注的接口。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#815ba4&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#fec418&#34;&gt;Context&lt;/span&gt; is&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8d8687&#34;&gt;// 上下文会维护指向某个策略对象的引用。上下文不知晓策略的具体类。上下&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8d8687&#34;&gt;// 文必须通过策略接口来与所有策略进行交互。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#815ba4&#34;&gt;private&lt;/span&gt; strategy: Strategy&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8d8687&#34;&gt;// 上下文通常会通过构造函数来接收策略对象，同时还提供设置器以便在运行&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8d8687&#34;&gt;// 时切换策略。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    method &lt;span style=&#34;color:#06b6ef&#34;&gt;setStrategy&lt;/span&gt;(Strategy strategy) is&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#815ba4&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#06b6ef&#34;&gt;strategy&lt;/span&gt; &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; strategy&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8d8687&#34;&gt;// 上下文会将一些工作委派给策略对象，而不是自行实现不同版本的算法。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    method &lt;span style=&#34;color:#06b6ef&#34;&gt;executeStrategy&lt;/span&gt;(&lt;span style=&#34;color:#fec418&#34;&gt;int&lt;/span&gt; a, &lt;span style=&#34;color:#fec418&#34;&gt;int&lt;/span&gt; b) is&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#815ba4&#34;&gt;return&lt;/span&gt; strategy.&lt;span style=&#34;color:#06b6ef&#34;&gt;execute&lt;/span&gt;(a, b)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#2f1e2e;background-color:#e7e9db;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8d8687&#34;&gt;// 客户端代码会选择具体策略并将其传递给上下文。客户端必须知晓策略之间的差&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8d8687&#34;&gt;// 异，才能做出正确的选择。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#815ba4&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#fec418&#34;&gt;ExampleApplication&lt;/span&gt; is&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    method &lt;span style=&#34;color:#06b6ef&#34;&gt;main&lt;/span&gt;() is&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        创建上下文对象&lt;span style=&#34;color:#ef6155&#34;&gt;。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        读取第一个数&lt;span style=&#34;color:#ef6155&#34;&gt;。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        读取最后一个数&lt;span style=&#34;color:#ef6155&#34;&gt;。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        从用户输入中读取期望进行的行为&lt;span style=&#34;color:#ef6155&#34;&gt;。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#815ba4&#34;&gt;if&lt;/span&gt; (action &lt;span style=&#34;color:#5bc4bf&#34;&gt;==&lt;/span&gt; addition) then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            context.&lt;span style=&#34;color:#06b6ef&#34;&gt;setStrategy&lt;/span&gt;(&lt;span style=&#34;color:#815ba4&#34;&gt;new&lt;/span&gt; ConcreteStrategyAdd())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#815ba4&#34;&gt;if&lt;/span&gt; (action &lt;span style=&#34;color:#5bc4bf&#34;&gt;==&lt;/span&gt; subtraction) then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            context.&lt;span style=&#34;color:#06b6ef&#34;&gt;setStrategy&lt;/span&gt;(&lt;span style=&#34;color:#815ba4&#34;&gt;new&lt;/span&gt; ConcreteStrategySubtract())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#815ba4&#34;&gt;if&lt;/span&gt; (action &lt;span style=&#34;color:#5bc4bf&#34;&gt;==&lt;/span&gt; multiplication) then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            context.&lt;span style=&#34;color:#06b6ef&#34;&gt;setStrategy&lt;/span&gt;(&lt;span style=&#34;color:#815ba4&#34;&gt;new&lt;/span&gt; ConcreteStrategyMultiply())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        result &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; context.&lt;span style=&#34;color:#06b6ef&#34;&gt;executeStrategy&lt;/span&gt;(First number, Second number)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        打印结果&lt;span style=&#34;color:#ef6155&#34;&gt;。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;有限状态机&#34;&gt;有限状态机&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250515182923857.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Business Process Modelling with Activity Diagrams and Business Process Model and Notation (BPMN)</title>
      <link>https://example.docsy.dev/school/159.225/week4_5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/school/159.225/week4_5/</guid>
      <description></description>
    </item>
    <item>
      <title>Intro to  Systems Analysis and Modelling</title>
      <link>https://example.docsy.dev/school/159.225/week1_2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/school/159.225/week1_2/</guid>
      <description>&lt;h4 id=&#34;what-is-system&#34;&gt;What is System&lt;/h4&gt;&#xA;&lt;p&gt;There are two jobs mainly for system&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;achieve goals&lt;/li&gt;&#xA;&lt;li&gt;MOST IMPORTANTLY add value to existing system&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;A system generally contain 2 character, user and developer. Developer can get value from user and user needs will accomplished from system&lt;/p&gt;&#xA;&lt;p&gt;For programmer build a system using code. before writing they need a plan.&lt;/p&gt;&#xA;&lt;h4 id=&#34;sdlc&#34;&gt;SDLC&lt;/h4&gt;&#xA;&lt;p&gt;This is the &lt;em&gt;&lt;strong&gt;MAIN&lt;/strong&gt;&lt;/em&gt; concept of modelling requirement and analysis, which is the key part of hole lesson. we will talk deeply in later chapter&lt;/p&gt;</description>
    </item>
    <item>
      <title>lab3</title>
      <link>https://example.docsy.dev/school/159.225/week3/lab3/lab3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/school/159.225/week3/lab3/lab3/</guid>
      <description>&lt;p&gt;Use-case Description&lt;/p&gt;&#xA;&lt;p&gt;A user-side function model.&#xA;not sequense model&lt;/p&gt;&#xA;&lt;p&gt;Do not internal system components into user-side model. It&amp;rsquo;s no useful to users&lt;/p&gt;&#xA;&lt;p&gt;an use action is connected with a straight line&lt;/p&gt;</description>
    </item>
    <item>
      <title>Scenarios and Use Cases</title>
      <link>https://example.docsy.dev/school/159.225/week3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/school/159.225/week3/</guid>
      <description>&lt;h4 id=&#34;use-case&#34;&gt;Use-case&lt;/h4&gt;&#xA;&lt;p&gt;The use-cases symbol on the use case diagram shows what the actor wants to do.&#xA;Not how that user goal is achieved,&lt;/p&gt;&#xA;&lt;p&gt;Each Use-cases describe how event triggers actions performed by the system and the user. Everything can be thought of as a response to trigger event. When a trigger event occurs, the system performs the actions defined in the use-case.&lt;/p&gt;&#xA;&lt;h4 id=&#34;lab2&#34;&gt;Lab2&lt;/h4&gt;&#xA;&lt;p&gt;Tutorial 2: Gathering Requirements for your chosen Case Study (no formal submission needed)&lt;/p&gt;</description>
    </item>
    <item>
      <title>159.261 GamingProgramming</title>
      <link>https://example.docsy.dev/school/159.261/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/school/159.261/</guid>
      <description>&lt;h4 id=&#34;159261-gaming-programming-游戏编程&#34;&gt;159.261 Gaming Programming 游戏编程&lt;/h4&gt;&#xA;&lt;p&gt;文字笔记记录于此，代码请见 &lt;a href=&#34;https://github.com/hamhuo-hub/StudentSphere/tree/main/Massey/159.261&#34;&gt;仓库&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;要求&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;文件名小写&lt;/li&gt;&#xA;&lt;li&gt;标题首字母大写&lt;/li&gt;&#xA;&lt;li&gt;所需文件以Onedrive直链接形式嵌入&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>课程归档</title>
      <link>https://example.docsy.dev/school/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/school/</guid>
      <description></description>
    </item>
  </channel>
</rss>
