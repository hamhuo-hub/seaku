[{"body":"","categories":"School","description":"159.261 Gaming Programming","excerpt":"159.261 Gaming Programming","ref":"/school/159.261/week4_5/","tags":["Gaming"],"title":""},{"body":"Assignment 1 \u003c!DOCTYPE html\u003e 知行合一 ![image.png](1\nDescription \u003c!DOCTYPE html\u003e 知行合一 Write a project plan about\nanalysis modelling high-level design IMPORTANT: NO development, rollout or testing phases of the project.\nTime Line: \u003c!DOCTYPE html\u003e 知行合一 3 days\nDay1 \u003c!DOCTYPE html\u003e 知行合一 PRE-WORK\nOrganized all concepts Assign1 need Search and understand back-info Format Requirement \u003c!DOCTYPE html\u003e 知行合一 A description and explanation of any assumptions you have made in your project planning A WBS, Gantt or PERT chart for the analysis, modelling and high level design part of the project. DO NOT need to produce the actual diagrams, you are only deciding which ones will be produced at a later stage make any necessary assumptions if relevant information is not given in the project brief ensure that you describe these assumptions in your report (first item above). 4000 to 5000 words long The suite of certain diagrams and documents ==will== produce describe the different ==levels of detail== in the diagrams (conceptual level, logical level) Content Requirement \u003c!DOCTYPE html\u003e 知行合一 A ===system request=== document A ===technical feasibility=== analysis Recommendation of systems development ===methodology=== and Reason Description of the team member with ==role== they played and reason A ==Requirements gathering== plan, how and what do you need specifically? A ==stakeholder engagement== plan System Request \u003c!DOCTYPE html\u003e 知行合一 Business Need Business Requirements Business Value Special Issue of Constrains technical feasibility \u003c!DOCTYPE html\u003e 知行合一 familiar with business area familiar with technology project size compatibility Organization Feasibility \u003c!DOCTYPE html\u003e 知行合一 methodology \u003c!DOCTYPE html\u003e 知行合一 requirements gathering \u003c!DOCTYPE html\u003e 知行合一 Requirements-Gathering Techniques requirements analysis strategies requirement definition ","categories":"School","description":"Contain all assignment work","excerpt":"Contain all assignment work","ref":"/school/159.225/assignment/","tags":"","title":"159.225 Assignment"},{"body":"","categories":"School","description":"","excerpt":"","ref":"/school/159.225/","tags":"","title":"159.225 System Analysis and Modelling"},{"body":" In this course, we will explore a range of essential topics for implementing computer games including fundamental computer graphics, games software architecture and game physics systems. The course contains a significant practical computer lab component where students are guided through the games development process.\n3D is NOT included\n","categories":"School","description":"159.261 Gaming Programming","excerpt":"159.261 Gaming Programming","ref":"/school/159.261/","tags":["Gaming"],"title":"159.261 Gaming Programming"},{"body":"知识网络的构建非常有效 完成了知识体系梳理, 让知识点之间互相联系, 达到互相补充的目的, 达到系统性学习的要求 使用Obisidian后完成单元的时间从1个月缩短至5天\n目前的问题: 在知识点构建过程会引用未知知识点, 如果使用深度优先策略会导致单个知识点构建时间过长 使用广度优先策略会导致知识点构建不充分, 导致难以理解甚至错误\ntodo: 找到构建知识点的策略\n待实践: 层次递进法（分层次学习）\n先广度遍历建立基础，再针对难点深度学习。 先粗略标注知识点（例如在 Obsidian 中使用标签），然后逐步填充内容。 设定“深度阈值”，例如最多深入两层，避免陷入细节漩涡。\n关键路径法（关键知识点优先） 找出知识体系中的核心概念（如“动机图”或“概念网络”），优先构建这些关键点。 采用“知识辐射”策略，从核心知识点向外扩展，保证整体理解不受阻碍。\n自适应探索法（按难度动态调整） 在学习过程中动态调整策略：遇到理解困难时，切换为局部深度探索，否则维持广度推进。 利用\n问题驱动学习（Problem-Based Learning, PBL），遇到卡点时再深入，而非预先穷举所有相关知识。\n时间配额法（限制单个知识点时间） 设定时间上限，例如每个知识点最多20分钟，如果仍有未解决的问题，则标记为“待深入”，后续再集中攻克。 通过设定学习周期（如“5天初步构建，10天复盘深化”）来避免单点耗时过多。\n","categories":"","description":"","excerpt":"知识网络的构建非常有效 完成了知识体系梳理, 让知识点之间互相联系, 达到互相补充的目的, 达到系统性学习的要求 使用Obisidian后完 …","ref":"/dairy/2%E6%9C%8810%E6%97%A5/","tags":"","title":"2月10日"},{"body":"太忙了, 忘记写日志了\n实践了层次递进法 将任务量缩减分层遍历任务, 逐层深入, 在一天完成了MySQL 模块的整体结构\n归纳如下, 遍历层数限制为2层, 当知识点层数超过2层时采取两种策略\nAI 归纳, 减少搜索深度 放弃, 继续广度学习 第一种策略很好理解, AI将深度的理论归纳为表层结果, 减少厚度\n第二种策略的理论基础是, 知识点并非树状而是网状结构\n并发编程下有子节点\n子节点下还有 孙 节点\n这看起来是层层递进的树结构, 但是总体来看:\n这是一张网络, 当广度搜索时原先的节点在不同的搜索区域会升级, 从子节点升级为父节点, 从而达到 缩小厚度的结果\n比如搜索路径 并发编程\n此时 AQS 是第三层节点, 学习自旋锁和CLH锁时就应该放弃\n放弃后转为广度搜索, 开始遍历之前的二级节点\n此时在广度搜索基础上, AQS 自动降级了, 通俗来讲就是学习AQS的基础打牢了, 可以将任意的二级节点作为基础向下遍历了\n上述可知, 层级学习的核心是广度搜索结合深度搜索, 前提是有系统的学习路径, 思想是逐层递进, 优先搭建网络, 之后丰满节点\n阅读:\n***问题驱动学习（Problem-Based Learning, PBL）\n","categories":"","description":"","excerpt":"太忙了, 忘记写日志了\n实践了层次递进法 将任务量缩减分层遍历任务, 逐层深入, 在一天完成了MySQL 模块的整体结构\n归纳如下, 遍历层 …","ref":"/dairy/2%E6%9C%8811%E6%97%A5/","tags":"","title":"2月11日"},{"body":"站点成功注册到google 其中几个要点\n默认的 hugo server 指令会在所有页面拒绝索引, 要使用 hugo –gc 或者 hugo google收录的sitemap有一个陈年bug, 站点地图必须使用双斜线并且末尾加斜线 百度收录推荐用www但是加上前缀会导致跳转, 盲猜是个bug ","categories":"","description":"","excerpt":"站点成功注册到google 其中几个要点\n默认的 hugo server 指令会在所有页面拒绝索引, 要使用 hugo –gc …","ref":"/dairy/2%E6%9C%8819%E6%97%A5/","tags":"","title":"2月19日"},{"body":"项目开始了\n高兴 加入了天才噜噜噜的群 高兴 redis缓存一致模型我一个人搞出来了 ","categories":"","description":"","excerpt":"项目开始了\n高兴 加入了天才噜噜噜的群 高兴 redis缓存一致模型我一个人搞出来了 ","ref":"/dairy/2%E6%9C%8820%E6%97%A5/","tags":"","title":"2月20日"},{"body":"尝试投递了第一批简历, 0面试\n太着急了, 八股, 力扣没有准备充分, 但是这个不是主要原因 主要原因是简历的问题, 拷打业务准备不充分 解决: 10天冲刺计划 计划: - 个人端口完成 2/28 - 简历完成 2/27 - 每日力扣 两题, 只做热门题 10天 两遍 - 面渣背诵加上热门50题 10天 两遍 - 小组模块完成 3天 ","categories":"","description":"","excerpt":"尝试投递了第一批简历, 0面试\n太着急了, 八股, 力扣没有准备充分, 但是这个不是主要原因 主要原因是简历的问题, 拷打业务准备不充分 解 …","ref":"/dairy/2%E6%9C%8827%E6%97%A5/","tags":"","title":"2月27日"},{"body":"在接收他人观点之前首先明确自己的观点 否则会被PUA, 他人强加的观点是立不住脚的, 无论表述上是否符合客观事实, 缺少论证的观点任何人都可以拒绝接受 日常生活中不需要十分谨慎的判断其他人说的每句话, 只要小心反问,诘问具有强烈感情的观点就好 比如\n你不现在开始学, 难道是不打算保研了吗?\n交了这么多钱, 还没办法出国, 你不就是败家吗!\n呵, 瞎忙活些什么, 一天天的就知道卷, 把宿舍风气都败坏了\n哼, 早告诉你,你成不了事~\n对于这些感情色彩强烈的表述, 抛去客观情况不论, 首先立场上就不应该接受, 作为平等个体, 在任何情况下抛出的观点一定是站在说话者自身立场上的. 我们没有任何理由接收他人立场上的观点,\n但是这存在例外. 只有非常了解某人实际生活和背景的人才能综合种种因素站在他人的立场上抛出观点(比如父母).\n对于干系至深之人所抛出的观点可能带有强烈感情色彩, 但在反驳之前请三思.\n","categories":"","description":"","excerpt":"在接收他人观点之前首先明确自己的观点 否则会被PUA, 他人强加的观点是立不住脚的, 无论表述上是否符合客观事实, 缺少论证的观点任何人都可 …","ref":"/dairy/3%E6%9C%8814%E6%97%A5/","tags":"","title":"3月14日"},{"body":"零. 大学只有两件事, 寻找对象和寻找自我, 这两件事完成一件就很了不起 \u003c!DOCTYPE html\u003e 知行合一 一. 建议每个程序员都能搭建一个自己的博客 \u003c!DOCTYPE html\u003e 知行合一 一个百度谷歌搜索你的名字就能访问的个人名片\n博客不需要多么复杂, 学习笔记, 生活感悟, 一些日常生活的灵感, 个人哲学都可以写到上面\n二. 几个非常有用的网站 \u003c!DOCTYPE html\u003e 知行合一 //到百度搜下什么叫\"出国机场\" 1. https://github.com/goeep/tuijianvpn //java语言 是缺少资源/实验室/学长的情况下最适合入门和找实习的语言, 因为网上教程多 2. https://javabetter.cn/ 3. https://liaoxuefeng.com/?src=redirect //推荐所有人学习python, 大致了解下也好 4. https://liaoxuefeng.com/books/python/introduction/index.html //大二的线代大一的高数好好听, 后续忘记了没关系, 这种思维模式会支撑你学习其他领域 5. https://www.3blue1brown.com/ 三. 对于希望实习的学弟 \u003c!DOCTYPE html\u003e 知行合一 来自学长的凉经\n雅思越早过越合适, 举个例子, 福建某985大三没有课程强制要求计院学生实习, 为什么? 因为厦大学生只用三年就可以修完所有学分并且专业技能达到职业标准. 这并不意味学校惨无人道, 这意味着公司秋招和春招是在大三进行的, 大一下就要开始确定方向并开始准备, 大二就要尝试实习, 大三正式拿到实习offer\n因此雅思越早完成就可以空出时间慢慢寻找自我\n四. 小心其他人突然抛出的观点\n","categories":"","description":"","excerpt":"零. 大学只有两件事, 寻找对象和寻找自我, 这两件事完成一件就很了不起 \u003c!DOCTYPE html\u003e 知行合一 一. 建议每个程序员都能 …","ref":"/dairy/3%E6%9C%8817%E6%97%A5/","tags":"","title":"3月17日"},{"body":"进入任何新领域之前都应该先找教程, 先找视频教程, 而不是直接上手\nfinal stage 4-9 \u003c!DOCTYPE html\u003e 知行合一 Review stage \u003c!DOCTYPE html\u003e 知行合一 Review all java course\nJava se + se note + se interview\nJava web + web note + web interview\nweb Socket\ngateway\nSpring MVC + mvc note + mvc interview\nSpring Boot + boot note + boot interview\nSpring cloud + cloud note + cloud interview\nRedis\nmicroservice\nMySQL\n","categories":"","description":"","excerpt":"进入任何新领域之前都应该先找教程, 先找视频教程, 而不是直接上手\nfinal stage 4-9 \u003c!DOCTYPE html\u003e …","ref":"/dairy/3%E6%9C%8828%E6%97%A5/","tags":"","title":"3月28日"},{"body":"pdd和taotian笔试 不可谓不惨烈\n在原子的学习时间内必须有测试看到学习效果\n提问, 没有问题是不对的, 一定是不专心\n","categories":"","description":"","excerpt":"pdd和taotian笔试 不可谓不惨烈\n在原子的学习时间内必须有测试看到学习效果\n提问, 没有问题是不对的, 一定是不专心\n","ref":"/dairy/3%E6%9C%889%E6%97%A5/","tags":"","title":"3月9日"},{"body":"","categories":"School","description":"","excerpt":"","ref":"/school/159.225/week4_5/","tags":"","title":"Business Process Modelling with Activity Diagrams and Business Process Model and Notation (BPMN)"},{"body":"生成式AIDiffusion Model 原理剖析 \u003c!DOCTYPE html\u003e 知行合一 WIP\n高斯采样, denoise n次, 产生图片\n同一个denosie反复使用, 但是输入噪声的强度不同, 设计一个强度输入\nmodel 内部是预测噪声, 之后减去噪声\n为什么不直接输出呢? 产生噪声更简单, 分布简单好训练\n但是噪声预测怎么训练? 没有pairdata啊\n那就自己加噪音 - Forward Process\n数据集 LAION IMAGENET, 中有文字和图片的对应\nText -to-image \u003c!DOCTYPE html\u003e 知行合一 stable diffusion \u003c!DOCTYPE html\u003e 知行合一 三大组件\nTextEncoder -\u003e vector 噪音 -\u003e Generation Model -\u003e 中间产物(图片的压缩版本) 压缩图片 -\u003e decoder -\u003e 图片\n分开训练后组合\nText encoder \u003c!DOCTYPE html\u003e 知行合一 text-encoder对图像结果影响很大 FID 越小越好, CLIP 越大越好, a为text-encoder b为predict-model大小\nFID: CLIP: 分别对文子和图片求向量, 越近越好\nDecoder \u003c!DOCTYPE html\u003e 知行合一 训练资料 但是输入的是 Latent Representation? 那怎么输入?\n用VAE/AE 就行\nWhat are Diffusion Models? \u003c!DOCTYPE html\u003e 知行合一 WIP\nDiffusion Models? is a type of Generative model. Like GAN(depreted), VAE.\nA generative model is a machine learning model designed to create new data that is similar to its training data. What is a generative model?\ndiffusion model use a special method to learn features and generate data - adding noise and learn from noise.\ndiffusion steps is to slowly add random noise and then learn to reverse the diffusion process to construct desired data samples from noise What are Diffusion Models?\nIf a model total unrecognize, how to learn from it?\nForward Diffusion process \u003c!DOCTYPE html\u003e 知行合一 Assuming we have set of images of cat(real data distribution), Given a data point sampled from a real data distribution randomly\nIn probability theory and statistics, a Markov chain or Markov process is a stochastic process describing a sequence of possible events in which the probability of each event depends only on the state attained in the previous event. Markov chain proces\nThen define a Markov chain process called Forward Diffusion Process which can add small amount of Gaussian noise to the image we sampled. Repate T times producing a sequence of noisy samples X1-Xt form real data set\nIn real world signal, Gaussian noise models (some, but not all) actual physical scenarios quite well. In various ways sample data have noise more or less, This is a side effect of the Central Limit Theorem\nIn deep learning, Gaussian noise is often added to the input data during training to improve the robustness and generalization ability of the model. This is known as data augmentation\nBy adding noise to the input data, the model is forced to learn features that are robust to small variations in the input, which can help it perform better on new, unseen data.\nModel can learn from sample noise and ignore them, if model only seen ‘clean data’ model can be interrupted by noise samples. Why Gaussian noise apart form other noise? Gaussian noise is useful\nThe step size is controlled by variance schedule , took T steps from 0 to 1\nwe can afford a larger update step when the sample gets noisier, so β 1 \u003c β 2 \u003c ⋯ \u003c β T and therefore ᾱ 1 \u003e ⋯ \u003e ᾱ T .\nSo every step we get\n","categories":"MachineLearning","description":"","excerpt":"生成式AIDiffusion Model 原理剖析 \u003c!DOCTYPE html\u003e 知行合一 WIP\n高斯采样, denoise n次, 产 …","ref":"/graphicsai/diffusion-model/","tags":["Difussion"],"title":"DiffusionModel"},{"body":" DO NOT TRY to acquire fancy optimizations first\npublic static boolean isPrime(int num) { // single exception if (num == 2 || num == 5) { return true; } else if (num \u003c 2) { return false; } // last digit exception switch (num % 10) { case 0: case 2: case 4: case 5: case 6: case 8: return false; } // else for (int i = 3; i \u003c= Math.sqrt(num); i += 2) { if (num % i == 0) { return false; } } return true; } ","categories":"CodeWar","description":"Define a function that takes an integer argument and returns a logical value true or false depending on if the integer is a prime.\r\rPer Wikipedia, a prime number ( or a prime ) is a natural number greater than 1 that has no positive divisors other than 1 and itself.","excerpt":"Define a function that takes an integer argument and returns a logical …","ref":"/codewar/findprime/","tags":["OJ"],"title":"FindPrime"},{"body":"Two main key-concepts\nlength is odd get middle number of string length is even get middle 2 character public static String getMiddle(String word) { //Code goes here! int length = word.length(); if(length == 0) return null; return length%2 != 0 ? String.valueOf(word.charAt(length/2)) : word.substring(length/2-1,length/2+1); } Most part is return substring 2 characters. This method has complexity O(n)\nWe can improve to O(1), BY replacing substring to charAt\npublic static String getMiddle(String word) { //Code goes here! int length = word.length(); if(length == 0) return null; return length%2 != 0 ? String.valueOf(word.charAt(length/2)) : word.charAt(length/2-1) + \"\" + word.charAt(length/2); } ","categories":"CodeWar","description":"You are going to be given a non-empty string. Your job is to return the middle character(s) of the string.\r\rIf the string's length is odd, return the middle character.\rIf the string's length is even, return the middle 2 characters.","excerpt":"You are going to be given a non-empty string. Your job is to return …","ref":"/codewar/getmiddle/","tags":["OJ"],"title":"GetMiddle"},{"body":"What is System \u003c!DOCTYPE html\u003e 知行合一 There are two jobs mainly for system\nachieve goals MOST IMPORTANTLY add value to existing system A system generally contain 2 character, user and developer. Developer can get value from user and user needs will accomplished from system\nFor programmer build a system using code. before writing they need a plan.\nSDLC \u003c!DOCTYPE html\u003e 知行合一 This is the MAIN concept of modelling requirement and analysis, which is the key part of hole lesson. we will talk deeply in later chapter\nthe workflow called Systems Development Life Cycle (SDLC), it’s a process of gradual refinement Each phase consists of a series of steps and Each phase is documented (deliverables) Phases are executed sequentially, incrementally, iteratively or in some other pattern\nThis 4 phase is BASIC concept, a common view is during entire develop life, developers should review and revisit in multi times, when and in which order?\nProject Methodology \u003c!DOCTYPE html\u003e 知行合一 https://www.virtasant.com/blog/sdlc-methodologies\nSDLC Methodologies are processes and practices used by software development teams in order to successfully navigate the Software Development Life Cycle (SDLC).\nlet’s skip old-fashioned methodology\nThrowaway-Protyping \u003c!DOCTYPE html\u003e 知行合一 building initial ideas for different applications, interfaces, or functions, without necessarily having the intention of including them in the finished system.\nthe idea is to gather feedback, prove concepts, or undertake other research tasks.\nAgile \u003c!DOCTYPE html\u003e 知行合一 Agile is the mainstream methodology used in modern software development The Agile methodology breaks a project down into multiple cycles, each passing through some or all of the SDLC phases.\nScrum \u003c!DOCTYPE html\u003e 知行合一 Scrum Framework provided a Practical way of Agile\nkanban \u003c!DOCTYPE html\u003e 知行合一 kanban is another framework of agile\nKanban is a scheduling system framework, Kanban has a host of benefits when applied to Agile. You can limit WIP, focus on cycle time, and utilize just-in-time practices.\nKanban is sometimes compared to Scrum, which are similar in some ways, but are distinct frameworks:\nScrum utilizes fixed length Sprints cycles while Kanban is about continuous flow Scrum is role focused, while Kanban doesn’t utilize roles Scrum measures velocity, while Kanban focuses on cycle time Extreme Programming \u003c!DOCTYPE html\u003e 知行合一 Planning Phase \u003c!DOCTYPE html\u003e 知行合一 Process and Document in Planning phase\nPlanning Phase - Current we focus on Initiation\nsystem request feasibility analysis System Request \u003c!DOCTYPE html\u003e 知行合一 A document that describes the reasons for and the value new system will add\nThis is the first step in the SDLC process\nphases on System Request\nLet’s get clearify here\nWho recommend to build - sponsor Why to build - business need What the build provided - business requirement What value build provided - business value Other Notice: This is non-technic focus, emphasis on business aspects\nExamples:\nbusiness need:\nbusiness requirement\nbusiness value\nFeasibility \u003c!DOCTYPE html\u003e 知行合一 Once the need for system is finished, Project need more detail file\nTime is a management issue, We ignored here Most team revise study during SDLC and revisit content at every check points Team may cancel the project or create substantial revisions\nTechnical Feasibility \u003c!DOCTYPE html\u003e 知行合一 familiar business application area familiar with the technology, delay will cause when learning new technology project size compatibility, most cases we build a system on existing system The assessment of a project’s technical feasibility is not cut and dried. In many cases, some interpretation of underlying conditions is needed\none is to compare prior projects undertaken by orgnization another is to consult with IT professionals or external it consultants Examples:\nBusiness area\nfamiliarity with technology\nproject size\ncompatibility\nAnalysis Phase \u003c!DOCTYPE html\u003e 知行合一 Required Gathering \u003c!DOCTYPE html\u003e 知行合一 The most critical step for SDLC. when trying develop a system. Good method of requirement gathering can prepared\nhigh vs. low requirement\nTechniques within Requirements-Gathering \u003c!DOCTYPE html\u003e 知行合一 Lab \u0026 Exercise 1 \u003c!DOCTYPE html\u003e 知行合一 Documenting Lab1\nOverview: A wealthy entrepreneur and art lover has decided to create an online system called ArtSpace, to assist in the display and sale of works of art. She has employed you to create a design for the system. The system is intended to bring together a range of different user groups who are interested in art sales and purchases: artists; art dealers; serious art buyers and collectors; and casual members of the public who may consider buying art works on occasion.\n","categories":"School","description":"","excerpt":"What is System \u003c!DOCTYPE html\u003e 知行合一 There are two jobs mainly for …","ref":"/school/159.225/week1_2/","tags":"","title":"Intro to  Systems Analysis and Modelling"},{"body":"A Narcissistic Number (or Armstrong Number) is a positive number which is the sum of its own digits, each raised to the power of the number of digits in a given base. In this Kata, we will restrict ourselves to decimal (base 10).\nFor example, take 153 (3 digits), which is narcissistic:\n1^3 + 5^3 + 3^3 = 1 + 125 + 27 = 153 and 1652 (4 digits), which isn’t:\n1^4 + 6^4 + 5^4 + 2^4 = 1 + 1296 + 625 + 16 = 1938 The Challenge:\nYour code must return true or false (not ’true’ and ‘false’) depending upon whether the given number is a Narcissistic number in base 10.\nThis may be True and False in your language, e.g. PHP.\nError checking for text strings or other invalid inputs is not required, only valid positive non-zero integers will be passed into the function\nWe just use MATH.POW for start\npublic static boolean isNarcissistic(int number) { if(number \u003c 0){ return false; } int temp = number; int sum = 0; int count = String.valueOf(temp).length(); while(temp != 0) { sum += Math.pow(temp % 10, count); temp = temp / 10; } boolean isNarcissistic = sum == number; return isNarcissistic; }} Actually ,There are only few narcissistic numbers in the signed 32-bit with switch case, is easy to flow through all cases\npublic static boolean isNarcissistic(int number) { switch (number) { case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7: case 8: case 9: case 153: case 370: case 371: case 407: case 1_634: case 8_208: case 9_474: case 54_748: case 92_727: case 93_084: case 548_834: case 1_741_725: case 4_210_818: case 9_800_817: case 9_926_315: case 24_678_050: case 24_678_051: case 88_593_477: case 146_511_208: case 472_335_975: case 534_494_836: case 912_985_153: return true; default: return false; }} ","categories":"CodeWar","description":"A Narcissistic Number (or Armstrong Number) is a positive number which is the sum of its own digits, each raised to the power of the number of digits in a given base. In this Kata, we will restrict ourselves to decimal (base 10).","excerpt":"A Narcissistic Number (or Armstrong Number) is a positive number which …","ref":"/codewar/narcissisticnumber/","tags":["OJ"],"title":"IsNarcissistic"},{"body":"","categories":"MachineLearning","description":"","excerpt":"","ref":"/graphicsai/maximum-likelihood-estimation/","tags":["Difussion"],"title":"MaximumLikelihoodEstimation"},{"body":"You might know some pretty large perfect squares. But what about the NEXT one?\nComplete the findNextSquare method that finds the next integral perfect square after the one passed as a parameter. Recall that an integral perfect square is an integer n such that sqrt(n) is also an integer.\nIf the argument is itself not a perfect square then return either -1 or an empty value like None or null, depending on your language. You may assume the argument is non-negative.\nhttps://www.codewars.com/kata/56269eb78ad2e4ced1000013\nTo be honest, there is no better way to utilize hardware instructions than by designing an algorithm yourself.\nHowever, we can use an existing algorithm here.\npublic static long findNextSquare(long sq) { // perfect number should end with 0, 9, 5, 4, 1 int back = (int)(sq % 10); // indicate input is perfect square or not if(back != 0 \u0026\u0026 back != 9 \u0026\u0026 back != 5 \u0026\u0026 back != 4 \u0026\u0026 back != 1 \u0026\u0026 back != 6){ return -1L; } // maybe a perfect number else{ // find square root // use repeated substraction int factor = 1, i = 0; while(sq \u003e 0){ sq -= factor; i++; factor += 2; } long sqrt = i+1; if(sq == 0) return sqrt*sqrt; else return -1L; } } Test cases\n@Test public void test1() { assertEquals(144, NumberFun.findNextSquare(121)); } @Test public void test2() { assertEquals(-1, NumberFun.findNextSquare(155)); } @Test public void test3() { assertEquals(320356, NumberFun.findNextSquare(319225)); } @Test public void test4() { assertEquals(15241630849L, NumberFun.findNextSquare(15241383936L)); } @Test public void test5() { assertEquals(-1, NumberFun.findNextSquare(342786627)); } @Test public void randomTest1() { long input = (long)(Math.random()*100000L)+1; long square = input*input; assertEquals(square+(input*2+1), NumberFun.findNextSquare(square)); } The key part is type conversion—we need to convert int to long. Be careful, as the result of our calculation may exceed the range of int.\nFor example:\nreturn (long) * (long);\nis different from\nreturn (long)(int * int);\nThe latter may cause a loss of accuracy.\n","categories":"CodeWar","description":"You might know some pretty large perfect squares. But what about the NEXT one?","excerpt":"You might know some pretty large perfect squares. But what about the …","ref":"/codewar/numberfun/","tags":["OJ"],"title":"NumberFun"},{"body":"Quiz:\nOne of the components of a computer is its CPU. What is a CPU and what role does it play in a computer?\nCentral process Unit, a component of computer, the job of CPU is to excute programs\nExplain what is meant by an “asynchronous event.” Give some examples.\nevent happen at unpredictable time. when CPU needs data in disk, CPU will send signal to disk ask for preparing, disk has releative low speed compare to CPU, so data preparing as an unpredictable event can be seen as asynchronous event.\nWhat is the difference between a “compiler” and an “interpreter”?\ncompiler trans high-level lang to machine code, compiler will trans program all at once java’s machine code is run for an machine that not exists. JVM interpreter act like cpu, it trans instruction-by-instrction, as necessay, interpreter decide what is necessary and carry out that instruction java has both compiler and interpreter, interpreter is relativly small and simple. so it’s easy to wirte for an new type of computer. what’s more interpreter is user-friendly, user don’t have to understood complex java language, just handle class file to interpreter and the program can run on JVM\nExplain the difference between high-level languages and machine language.\nML is simple and can be execute by mechine, however programming is difficut.\nJava is an object-oriented programming language. What is an object? The central concept of object-oriented programming is the object, which is a kind of module containing data and subroutines.\nreview of Java, will introduce in Java topic\nIn Java, inheritance is an is-a relationship (Car is a Vehicle, Apple is a Fruit, Dog is an animal)\naggregation, is an has-a relationship\n@Override is a non-functional aggression, we can delete that\nwhat’s method body?\nwhy we need polmophism? it does not make sense. we can not have a non-perdictive program.\nInterface basicly a set of standers. Interface attributes are by default public, static and final. Interface methods are by default abstract and public.\nCollection Framework \u003c!DOCTYPE html\u003e 知行合一 Variables, or data is valuable and complexty. But we can not just store them in an entire place randomly. That will cost a lot time in serching and getting\nwe need different strucher in different situation.\nThe Collection interface includes various methods that can be used to perform different operations on objects, They provided almost all atom scence in developing.\nCollections work only with Reference types(objects) and not with primitive data types.\n==OK, but why?==\norder collection like an array allow to add or remove member\nset like set in math, can not have duplicate elements\nQueue FIFO manner\nMap store value in key-value elements\narrayList \u003c!DOCTYPE html\u003e 知行合一 linkedlist is also arrayList.\nwe need to declare the size of an array before we can use it. What if we need resize it? like we need store more element, or reduce capicy for saving space\nTo handle this issue, we can use the ArrayList class. ArrayList implement all methods form list, upon that, It allows us to create resizable arrays.\nUnlike arrays, Arraylists can automatically adjust its capacity when we add or remove elements from it. Hence, Arraylists are also known as dynamic arrays.\n===clone and deep clone===\nException Handling\nvital to robustness\nSometimes, we hate unpredicet action from normal process, to indicate the problem as well as make an declearation to users, we introduce EH\nExceptioon Handling is an design pattern in program, it contain 2 basic aspects\nError that occurs during runtime Cause normal program flow to be disrupted Exception Handlling is methology with try-catch block and finally part\nLamda expression\nnoname subroutain\nused in interfaces only have one abstract method.\nAnonymous Inner Class\nwhich means you can directly instance an Object without giving the name. Like instant interface, though it’s impossibale.\nThread\n2 way to define multi Thread\nextend Thread. and you have to implement Run(). call thread.start() will auto call start()\n==but why we have to override run method in Thread?==\nOr we can use Runnable interface, as well as override run().\n","categories":"School","description":"Overview Java","excerpt":"Overview Java","ref":"/school/159.261/week1_2_3/","tags":["Gaming"],"title":"Overview Java"},{"body":" String.Match()\nATM machines allow 4 or 6 digit PIN codes and PIN codes cannot contain anything but exactly 4 digits or exactly 6 digits.\nIf the function is passed a valid PIN string, return true, else return false.\ntwo important cases\nno letters length limited key: how to limit string in certain format\nASII code to range numbers, use String.length to limit digits length ==be aware of ture and false== we can simply coding\n// 1416ms public static boolean validatePin(String pin) { // Your code here... int l = pin.length(); // boolean o = (l == 4) || (l == 6) ? true : false; // boolean o = (l==4) || (l==6); // for reach can't apply to string for(char c : pin.toCharArray()) { if(c\u003c48 || c\u003e57){ o = false; } } return o; } use built-in regex Patterns String.match() public static boolean validatePin(String pin) { return pin.matches(\"\\\\d{4}|\\\\d{6}\"); } \\d means 0-9, but java can not use \\d so replace with \\\\d match 4 or 6 digits use \\\\d{4} but remember no space before or after like \\\\d{4} or \\\\d{4} pre-compile to improve performance we need compile patterns every time which is time-consuming with pre-compile we can save performance\nstatic Pattern pattern = Pattern.compile(\"\\\\d{4}|\\\\d{6}\"); public static boolean validatePin(String pin) { // pre compile improve performance return pattern.matcher(pin).matches(); } test-case\n@Test public void validPins() { assertEquals(true, Solution.validatePin(\"1234\")); assertEquals(true, Solution.validatePin(\"0000\")); assertEquals(true, Solution.validatePin(\"1111\")); assertEquals(true, Solution.validatePin(\"123456\")); assertEquals(true, Solution.validatePin(\"098765\")); assertEquals(true, Solution.validatePin(\"000000\")); assertEquals(true, Solution.validatePin(\"090909\")); } @Test public void nonDigitCharacters() { assertEquals(false, Solution.validatePin(\" a234\")); assertEquals(false, Solution.validatePin(\".234\")); assertEquals(false, Solution.validatePin(\"utp4564utp\")); assertEquals(false, Solution.validatePin(\"newline\")); } @Test public void invalidLengths() { assertEquals(false, Solution.validatePin(\"1\")); assertEquals(false, Solution.validatePin(\"12\")); assertEquals(false, Solution.validatePin(\"123\")); assertEquals(false, Solution.validatePin(\"12345\")); assertEquals(false, Solution.validatePin(\"1234567\")); assertEquals(false, Solution.validatePin(\" 1234\")); assertEquals(false, Solution.validatePin(\" 1234 \")); assertEquals(false, Solution.validatePin(\"1234 \")); assertEquals(false, Solution.validatePin(\"1.234\")); assertEquals(false, Solution.validatePin(\"00000000\")); assertEquals(false, Solution.validatePin(\"00000\")); assertEquals(false, Solution.validatePin(\"00000a\")); } ","categories":"CodeWar","description":"ATM machines allow 4 or 6 digit PIN codes and PIN codes cannot contain anything but exactly 4 digits or exactly 6 digits.","excerpt":"ATM machines allow 4 or 6 digit PIN codes and PIN codes cannot contain …","ref":"/codewar/validatepin/","tags":["OJ"],"title":"Palindrome"},{"body":" String.chars() Stream.map() Stream.distinct() Character.isAlphabetic()\nPre-pocess String. Use HashSet remove redundent numbers and non-alpha\npublic static boolean check(String sentence){ // sort chars in sentences char[] charArray = sentence.toLowerCase().trim().toCharArray(); Arrays.sort(charArray); HashSet\u003cCharacter\u003e set = new HashSet\u003c\u003e(); for (int i = 0; i \u003c charArray.length; i++) { if(set.contains(charArray[i])){ continue; }else if(charArray[i] \u003e= 97 \u0026\u0026 charArray[i] \u003c= 122){ set.add(charArray[i]); } } System.out.println(set); return set.size() == 26; } That’s not beautiful enough, for removing we can use distinct() and filter()\npublic static boolean check(String sentence) { return sentence.chars().map(Character::toLowerCase).filter(Character::isAlphabetic).distinct().count() == 26; } But we can also check if sentence contain all A-Z, with a special for loop\npublic static boolean check(String sentence) { sentence = sentence.toLowerCase().trim(); for (char c = 'a'; c \u003c 'z'; c++) { if (!sentence.contains(\"\" + c)) { return false; } } return true; } Two solution have same complexity O(n), both are great.\n","categories":"CodeWar","description":"A pangram is a sentence that contains every single letter of the alphabet at least once. For example, the sentence \"The quick brown fox jumps over the lazy dog\" is a pangram, because it uses the letters A-Z at least once (case is irrelevant).Given a string, detect whether or not it is a pangram. Return True if it is, False if not. Ignore numbers and punctuation","excerpt":"A pangram is a sentence that contains every single letter of the …","ref":"/codewar/pangramchecker/","tags":["OJ"],"title":"PangramChecker"},{"body":" String.format()\nFirst try, Prefixed numbers is fixed\nwe can simply cut out\npublic static String createPhoneNumber(int[] numbers) { // Your code here! String country = numbers[0] + \"\" + numbers[1] + \"\" + numbers[2]; String area = numbers[3] + \"\" + numbers[4] + \"\" + numbers[5]; String pop = \"\"; for (int i = 6; i \u003c= numbers.length - 1; i++) { pop = pop + numbers[i] + \"\"; } return \"(\" + country + \")\" + \" \" + area + \"-\" + pop; } 76ms\nBut There has an more elegant way to do so.\nUse String.format()\npublic static String createPhoneNumber(int[] numbers){ return String.format(\"(%d%d%d) %d%d%d-%d%d%d%d\",numbers[0],numbers[1],numbers[2],numbers[3],numbers[4],numbers[5],numbers[6],numbers[7],numbers[8],numbers[9] ); } But this method have to compile formatter, which caused extra time.\nOver all, we can use StringBuffer to put Strings together.\npublic static String createPhoneNumber(int[] numbers) { // Your code here! return new StringBuilder() .append(\"(\") .append(numbers[0]) .append(numbers[1]) .append(numbers[2]) .append(\") \") .append(numbers[3]) .append(numbers[4]) .append(numbers[5]) .append(\"-\") .append(numbers[6]) .append(numbers[7]) .append(numbers[8]) .append(numbers[9]) .toString(); } 76ms\nActually, It did not saving time, but use less space.\nSo recommend third method.\n","categories":"CodeWar","description":"Write a function that accepts an array of 10 integers (between 0 and 9), that returns a string of those numbers in the form of a phone number.","excerpt":"Write a function that accepts an array of 10 integers (between 0 and …","ref":"/codewar/phonenumber/","tags":["OJ"],"title":"PhoneNumber"},{"body":" np.array()\nIntroduce np.array() \u003c!DOCTYPE html\u003e 知行合一 difference between list in python and np.array()\nNumPy’s arrays are more compact than Python lists – a list of lists as you describe, in Python, would take at least 20 MB or so, while a NumPy 3D array with single-precision floats in the cells would fit in 4 MB. Access in reading and writing items is also faster with NumPy.\nNumPy is not just more efficient; it is also more convenient. You get a lot of vector and matrix operations for free, which sometimes allow one to avoid unnecessary work. And they are also efficiently implemented.\nfor example np.reshape()\nSolution \u003c!DOCTYPE html\u003e 知行合一 transform to np_array and use np.reshape() and translate back\ndef reshape_matrix(a: list[list[int|float]], new_shape: tuple[int, int]) -\u003e list[list[int|float]]: #Write your code here and return a python list after reshaping by using numpy's tolist() method numpy_array = np.array(a) try: reshape_matrix = numpy_array.reshape(new_shape).tolist() except ValueError: reshape_matrix = [] return reshape_matrix ","categories":"DeepML","description":"Write a Python function that reshapes a given matrix into a specified shape. if it cant be reshaped return back an empty list [ ]","excerpt":"Write a Python function that reshapes a given matrix into a specified …","ref":"/deepml/reshape_matrix/","tags":["OJ"],"title":"reshape_matrix"},{"body":"Use-case \u003c!DOCTYPE html\u003e 知行合一 The use-cases symbol on the use case diagram shows what the actor wants to do. Not how that user goal is achieved,\nEach Use-cases describe how event triggers actions performed by the system and the user. Everything can be thought of as a response to trigger event. When a trigger event occurs, the system performs the actions defined in the use-case.\nLab2 \u003c!DOCTYPE html\u003e 知行合一 Tutorial 2: Gathering Requirements for your chosen Case Study (no formal submission needed)\nThis week you can do the requirements gathering for one of the design briefs (mentioned in Assignment 1 – where you have to choose the design brief based on your family name). List these requirements appropriately (e.g. create requirements definition report).\nfirst try:\nLab3 \u003c!DOCTYPE html\u003e 知行合一 What is UML? Why do we need this?\nUnified Modeling Language, is a standardized modeling language consisting of an integrated set of diagrams, developed to help system and software developers for specifying, visualizing, constructing, and documenting the artifacts of software systems, as well as for business modeling and other non-software systems.\ntechniques to automate the production of software and to improve quality and reduce cost and time-to-market. techniques to manage the complexity of systems as they increase in scope and scale. In particular, they recognize the need to solve recurring architectural problems, such as physical distribution, concurrency, replication, security, load balancing and fault tolerance. (UML) was designed to respond to these needs. What does a use case diagram represent and what are the different elements of a use case diagram?\nA Use Case Diagram in Unified Modeling Language (UML) is a visual representation that illustrates the interactions between users (actors) and a system.\nIt captures the functional requirements of a system, showing how different users engage with various use cases, or specific functionalities, within the system.\nActor, UseCase, SystemBoundary\nWhat are we documenting when we place a use case on the diagram?\nWhat are we documenting when we place an actor on the diagram?\nWhich of the following could be an actor found on a use-case diagram? Why? o Ms. Mary Smith\no Supplier\no Customer\no Internet Customer\no Data Entry Clerk\no Database Administrator\nHow is use-case diagramming related to functional modeling?\nWhy do we draw association lines between actors and use cases?\n","categories":"School","description":"","excerpt":"Use-case \u003c!DOCTYPE html\u003e 知行合一 The use-cases symbol on the use case …","ref":"/school/159.225/week3/","tags":"","title":"Scenarios and Use Cases"},{"body":" StringBuilder.reverse() String.join()\nTest Sample is complex, we can process to beauty input\nfirst try\npublic static String spinWords(String sentence) { //TODO: Code stuff here StringBuilder result = new StringBuilder(); StringBuilder word = new StringBuilder(); int count = 0; for (int i = 0; i \u003c sentence.length(); i++) { char ch = sentence.charAt(i); if (ch == ' ') { if(count \u003e= 5) { result.append(reverse(word)); } else { result.append(word.toString()); } result.append(\" \"); word = new StringBuilder(\"\"); count = 0; continue; } word.append(ch); count++; if (i == sentence.length() - 1) { if(count \u003e= 5) { result.append(reverse(word)); } else result.append(word.toString()); } } return result.toString(); } public static String reverse(StringBuilder word) { StringBuilder result = new StringBuilder(); for (int i = word.length() - 1; i \u003e= 0; i--) { result.append(word.charAt(i)); } return result.toString(); } That way too difficult. Actually, StringBuilder has method reverse\nwe can preprocess to separated words, and join in space.\npublic static String spinWords(String sentence) { //preprocess String[] words = sentence.split(\" \"); // what if replaced with enhanced-loop? // words[i] is directly modified because we assign a new string to the same index in the array. //for(int i=0; i\u003cwords.length; i++) { if (words[i].length() \u003e= 5){ words[i] = new StringBuilder(words[i]).reverse().toString(); } } return String.join(\" \", words); } ","categories":"CodeWar","description":"Write a function that takes in a string of one or more words, and returns the same string, but with all words that have five or more letters reversed (Just like the name of this Kata). Strings passed in will consist of only letters and spaces. Spaces will be included only when more than one word is present.","excerpt":"Write a function that takes in a string of one or more words, and …","ref":"/codewar/spinwords/","tags":["OJ"],"title":"SpinWords"},{"body":"similar as GetMiddle\nDifferent part is This kata need return all numbers (included ‘__’)\nAdd __ in front of loop\npublic static String[] solution(String s) { //Write your code here int l = s.length(); if(l%2 != 0){ s = s+\"_\"; l += 1; } String[] result = new String[l/2]; int j = 0; for(int i =0; i\u003c=l-2;){ substring complexity is O(n) result[j]=(s.substring(i,i+2)); i+=2; j++; } return result; } Same as [[GetMiddle]] we can replace substring with charAt\n//34ms public static String[] solution(String s) { //Write your code here int l = s.length(); if(l%2 != 0){ s = s+\"_\"; l += 1; } String[] result = new String[l/2]; int j = 0; for(int i =0; i\u003c=l-2;){ result[j]=(s.charAt(i) + \"\" + s.charAt(i+1)); i+=2; j++; } return result; }} NOTE!! String.substring() have complexity of O(n), be careful when use it!\n","categories":"CodeWar","description":"Complete the solution so that it splits the string into pairs of two characters. If the string contains an odd number of characters then it should replace the missing second character of the final pair with an underscore ('_').","excerpt":"Complete the solution so that it splits the string into pairs of two …","ref":"/codewar/stringsplit/","tags":["OJ"],"title":"StringSplit"},{"body":"internation\n新西兰选课 pre requirement 7号开放公寓 all pass can chose 3 major opt.\ntwo grad date\n2022/7 or 2026 7-11\nbased on HEBUT AND MASSEY course\n3 major fee different\nCS / IT/ SE\n47 Service and 855 peryear/ insurance + MAJOR FEE\nnumber of course - diff major\nCS CLOSER TO SE/ IT has 8 courses which has big diff\ntwo campus\nCS/IT Auckland\nCS/SE PalmerN\n300LEVEL - FINAL YEAR\nSee your strength, want have Master in AI, Program Design -\u003e CS\nSofter in industry-\u003e SE\nIT has less programing, data managed\nCS foucs program heavy, develop of alog, complexity sys SE software devloping maintain, application IT cloud computing, and data centered, data management\n后续amjed 介绍\nFINAL ADJUSTMENT PRE HIT 2 major and massey will decide final major\nKEY DATE\n2025 - 2 END IN 11/10 2026 -1 START 2/23\nDDL of MAJOR SELECT is 3/24/2025, get infomation from amjed or MASSEY teachers\nOnce decide will have OK from Amjed, April start lesson chosen.\nOnce major hited, start lesson select then massey can apply NZ VISA-S OFFER WILL PROVIDE IN MAY based on VISA-S require date\nBOOKING PLANE TICKET\n7/1 inform massey arrival\nweek of 7/7 arrive in campus\none/two week delay accepted with reason to all teacher seprated, rejected offer will caused if break rules\ndiploma no major differ, all same. which hold major on it\nBInS/BSc/BIt\nOrganized Notes: International Study Plan (HEBUT \u0026 Massey University) \u003c!DOCTYPE html\u003e 知行合一 1. Course Selection and Pre-requisites \u003c!DOCTYPE html\u003e 知行合一 Pre-requirement: Ensure all prerequisites are met before selecting courses. Major Options: Computer Science (CS) Information Technology (IT) Software Engineering (SE) All Pass Condition: If all courses are passed, you can choose 3 major options. Graduation Dates: 2022/7 or 2026/7-11 (based on HEBUT and Massey course alignment). 2. Fee Structure \u003c!DOCTYPE html\u003e 知行合一 Service Fee: 47 NZD Insurance: 855 NZD per year Major Fee: Varies depending on the chosen major (CS, IT, SE). Number of Courses: Differs by major: CS: Closer to SE. IT: 8 courses with significant differences. 3. Campus Information \u003c!DOCTYPE html\u003e 知行合一 CS/IT: Offered in Auckland. CS/SE: Offered in Palmerston North. 300-Level Courses: Final year courses. 4. Major Selection Guidance \u003c!DOCTYPE html\u003e 知行合一 Computer Science (CS): Focus: Heavy programming, algorithm development, and complex systems. Ideal for: Students aiming for a Master’s in AI or Program Design. Software Engineering (SE): Focus: Software development, maintenance, and application. Ideal for: Students interested in the software industry. Information Technology (IT): Focus: Cloud computing, data management, and data-centered systems. Ideal for: Students with less interest in programming. 5. Final Major Adjustment \u003c!DOCTYPE html\u003e 知行合一 Pre-HIT: Students will initially select 2 majors. Final Decision: Massey University will finalize the major based on performance and alignment. 6. Key Dates \u003c!DOCTYPE html\u003e 知行合一 2025 Semester 2 End Date: 10th November 2025. 2026 Semester 1 Start Date: 23rd February 2026. Major Selection Deadline: 24th March 2025. Information will be provided by Amjed or Massey teachers. Lesson Selection: Starts in April 2025 after major confirmation. Visa Application: NZ Visa-S offer will be provided in May based on visa requirements. Arrival Information: 7th July 2025: Arrival on campus. 1st July 2025: Inform Massey about your arrival. Delay Policy: A one/two-week delay is accepted with a valid reason. Failure to comply may result in offer rejection. 7. Additional Information \u003c!DOCTYPE html\u003e 知行合一 Diploma: No major difference; all diplomas are the same. Degree Options: Bachelor of Information Sciences (BInS) Bachelor of Science (BSc) Bachelor of Information Technology (BIt) 8. Visual References \u003c!DOCTYPE html\u003e 知行合一 Screenshots: 9. Next Steps \u003c!DOCTYPE html\u003e 知行合一 Contact Amjed for further clarification on major selection. Prepare for Visa Application: Ensure all documents are ready for the Visa-S process. Plan Arrival: Book plane tickets and inform Massey University about your arrival by 1st July 2025. This organized plan should help you navigate the course selection, major decision, and key dates effectively. Let me know if you need further assistance!\n新西兰选课前提条件 \u003c!DOCTYPE html\u003e 知行合一 7号开放公寓 \u003c!DOCTYPE html\u003e 知行合一 所有通过的学生可以选择3个专业选项。 有两个毕业日期： 2022年7月或2026年7月-11月 基于HEBUT和Massey课程安排。 3个专业费用不同： CS / IT / SE 47*8 = 376 服务费和每年 855 的保险\n课程数量——不同专业间有差异：\nCS与SE相近，而IT有8门课程，差异较大。 两个校区： \u003c!DOCTYPE html\u003e 知行合一 CS/IT：奥克兰 CS/SE：帕默斯顿 300级课程：最后一年课程 根据个人兴趣和强项选择专业：\n想做AI、程序设计的可以选择CS。 想要进入软件行业的可以选择SE。 IT涉及的编程较少，侧重于数据管理。 各专业特点： \u003c!DOCTYPE html\u003e 知行合一 CS：聚焦于程序开发、算法设计、系统复杂度。 SE：软件开发、维护及应用。 IT：云计算、数据中心、数据管理。 后续会有Amjed介绍。\n最终调整： \u003c!DOCTYPE html\u003e 知行合一 选择2个专业，Massey将决定最终专业。 关键日期 \u003c!DOCTYPE html\u003e 知行合一 2025年：2学期结束，截止日期为11/10 2026年：1学期开始，日期为2/23 主要选择的截止日期：2025年3月24日，获取Amjed或Massey教师的信息。 \u003c!DOCTYPE html\u003e 知行合一 一旦决定，Amjed会确认，4月开始选课。 确定专业后，可以开始选择课程，Massey可以申请新西兰签证（S类签证）。签证S类要求日期为5月。 机票预定： \u003c!DOCTYPE html\u003e 知行合一 7月1日通知Massey到达日期。 预计7月7日左右到达校园。 允许一至两周的延迟，需要给所有教师提供理由，若违规则会导致录取被拒。\n文凭无专业差异，所有文凭都是相同的，只有持有的专业不同： \u003c!DOCTYPE html\u003e 知行合一 BInS / BSc / BIt ","categories":"日志","description":"海阔知识库, 心怀希望. 人在迷途","excerpt":"海阔知识库, 心怀希望. 人在迷途","ref":"/dairy/","tags":["日志"],"title":"日志"},{"body":"完成了redis的分页和 redis + mysql 悲观锁的一致双写 今天通宵完成笔记和国际化模块的工作\nOauth2+Spring Cloud Gateway的项目架构准备好 完成鉴权模型的笔记, 流程图梳理完毕 redis的八股, 花点钱买热门50八股开始背 ","categories":"","description":"","excerpt":"完成了redis的分页和 redis + mysql 悲观锁的一致双写 今天通宵完成笔记和国际化模块的工作\nOauth2+Spring …","ref":"/dairy/3%E6%9C%881%E6%97%A5/","tags":"","title":""},{"body":"Loss and Go\n很多看起來非完成不可的事情，其實想通了並沒有那麼重要，因為這些是偽工作。無論是在職場上還是在生活中，提高效率都需要從拒絕偽工作開始。這與前面提到的人生需要減法是同樣的道理。\n一個人的效率提升到一定程度後就很難再提高，唯一能夠控制的就是少做一點事情，而不是擠壓時間把所有的事情隨便做完。\n找到最重要的工作，並優先完成\n避免成為偽工作者(消極的接受所有工作，或是從指派的工作中找一些容易的工作)\n==永遠超出對方的期待==, 獲得成長空間比薪水重要\n如果做事情想從五十分的水準提高到九十分，得靠先進的科學和技術。兩個人同樣做一件事，一個人完全靠經驗，另一人掌握了先進的技術，在其他條件相同的情況下，後者一定能做得比前者好。\n很多時候，事情難以開始，一天拖過一天，是因為目標不切實際、很難實現所導致的，\n因此只要設定切合實際的目標，有了正確的策略，就可以讓心態更積極，避免拖延。\n","categories":"","description":"","excerpt":"Loss and Go\n很多看起來非完成不可的事情，其實想通了並沒有那麼重要，因為這些是偽工作。無論是在職場上還是在生活中，提高效率都需要從 …","ref":"/dairy/4%E6%9C%889%E6%97%A5/","tags":"","title":""},{"body":"","categories":"","description":"","excerpt":"","ref":"/graphicsai/readme/","tags":"","title":""},{"body":"Introduce \u003c!DOCTYPE html\u003e 知行合一 Input and output not same length\ndecided by model itself which is called Seq2Seq Model\nSeq2Seq Model structure \u003c!DOCTYPE html\u003e 知行合一 Encoder and Decoder\nTransformer is a enhanced S2S model\nEncoder \u003c!DOCTYPE html\u003e 知行合一 Encoder in Transformer \u003c!DOCTYPE html\u003e 知行合一 Not a layer, is multi-layer\nDecoder \u003c!DOCTYPE html\u003e 知行合一 called Autoregressive\nIntroduce one of two decoder - Autoregressive decoder\nDecoder is generate result\nthere has a way make seq as input\nresult will contain a dictionary, with soft-max find MOST value(Classification)\nnext character will based on current character\nWhat if Error propagation?\nHow model decide output length?\nwe need a special input ‘stop’\nNAT \u003c!DOCTYPE html\u003e 知行合一 result is not generate one and another\nresult have same length as BEGIN\nfor example, In voice recognition, slow speed though add more BEGIN\nWhile NAT is usually worse than AT\nPUTTOGETHER \u003c!DOCTYPE html\u003e 知行合一 CROSS-ATTENTION \u003c!DOCTYPE html\u003e 知行合一 ","categories":"","description":"","excerpt":"Introduce \u003c!DOCTYPE html\u003e 知行合一 Input and output not same length …","ref":"/graphicsai/transformer/","tags":"","title":""},{"body":"","categories":"","description":"","excerpt":"","ref":"/graphicsai/vae/","tags":"","title":""},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/","tags":"","title":"Categories"},{"body":"","categories":"","description":"","excerpt":"","ref":"/codewar/","tags":"","title":"Code War"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/codewar/","tags":"","title":"CodeWar"},{"body":"","categories":"","description":"","excerpt":"","ref":"/school/","tags":"","title":"Course"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/deepml/","tags":"","title":"DeepML"},{"body":"","categories":"","description":"","excerpt":"","ref":"/deepml/","tags":"","title":"DeepML"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/difussion/","tags":"","title":"Difussion"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/gaming/","tags":"","title":"Gaming"},{"body":"3.6 (WIP)\nNeed Index page Here(WIP) \u003c!DOCTYPE html\u003e 知行合一 ","categories":"","description":"","excerpt":"3.6 (WIP)\nNeed Index page Here(WIP) \u003c!DOCTYPE html\u003e 知行合一 ","ref":"/graphicsai/","tags":"","title":"Graphics and AI"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/machinelearning/","tags":"","title":"MachineLearning"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/oj/","tags":"","title":"OJ"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/school/","tags":"","title":"School"},{"body":"","categories":"","description":"","excerpt":"","ref":"/search/","tags":"","title":"Search Results"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osstuff/","tags":"","title":"Stuff"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/","tags":"","title":"Tags"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/%E6%97%A5%E5%BF%97/","tags":"","title":"日志"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/%E6%97%A5%E5%BF%97/","tags":"","title":"日志"},{"body":"","categories":"","description":"","excerpt":"","ref":"/","tags":"","title":"海阔知识库"}]