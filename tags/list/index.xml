<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>List on 海阔集</title>
    <link>https://hamhuo.xyz/tags/list/</link>
    <description>Recent content in List on 海阔集</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://hamhuo.xyz/tags/list/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LinkedList</title>
      <link>https://hamhuo.xyz/docs/basic/container/linkedlist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://hamhuo.xyz/docs/basic/container/linkedlist/</guid>
      <description>&lt;h4 id=&#34;什么是链表&#34;&gt;什么是链表&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#%e4%bb%80%e4%b9%88%e6%98%af%e9%93%be%e8%a1%a8&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;meta name=&#34;baidu-site-verification&#34; content=&#34;codeva-23xblvQ4Jb&#34; /&gt;&lt;p&gt;链表是一种常见的基础数据结构，是一种线性表，但是并不会按线性的顺序存储数据，而是在每一个节点里存到下一个节点的地址。&lt;/p&gt;&#xA;&lt;p&gt;链表可分为单向链表和双向链表。&lt;/p&gt;&#xA;&lt;p&gt;一个单向链表包含两个值: 当前节点的值和一个指向下一个节点的链接。&lt;/p&gt;&#xA;&lt;p&gt;单向链表&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hamhuo-hub/HamPic/img/img/20250207180458615.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;双向链表&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hamhuo-hub/HamPic/img/img/20250207180510867.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Doubly-linked list implementation of the &lt;code&gt;List&lt;/code&gt; and &lt;code&gt;Deque&lt;/code&gt; interfaces. Implements all optional list operations, and permits all elements (including &lt;code&gt;null&lt;/code&gt;).&#xA;&lt;code&gt;LinkedList&lt;/code&gt; 是基于双向链表的数据结构, 实现队列和列表接口的所有方法, 允许存放任意类型元素&lt;/p&gt;&#xA;&lt;h4 id=&#34;基础使用&#34;&gt;基础使用&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#%e5%9f%ba%e7%a1%80%e4%bd%bf%e7%94%a8&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xD;&#xA;&lt;meta name=&#34;baidu-site-verification&#34; content=&#34;codeva-23xblvQ4Jb&#34; /&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;以下情况使用 LinkedList :&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;你需要通过循环迭代来访问列表中的某些元素。&lt;/li&gt;&#xA;&lt;li&gt;需要频繁的在列表开头、中间、末尾等位置进行添加和删除元素操作。&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c6d0f5;background-color:#303446;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e78284&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#e78284&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#e5c890&#34;&gt;LinkedList&lt;/span&gt;&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;E&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e78284&#34;&gt;extends&lt;/span&gt; AbstractSequentialList&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;E&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e78284&#34;&gt;implements&lt;/span&gt; List&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;E&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;, Deque&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;E&lt;span style=&#34;color:#99d1db;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;, Cloneable, Serializable&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用之前:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;LinkedList&lt;/code&gt; 类位于 &lt;code&gt;java.util&lt;/code&gt; 包中，使用前需要引入它&lt;/li&gt;&#xA;&lt;li&gt;链表实现了 &lt;code&gt;Queue&lt;/code&gt; 接口, 可以作为队列使用&lt;/li&gt;&#xA;&lt;li&gt;链表实现了 &lt;code&gt;List&lt;/code&gt; 接口, 可进行列表的相关操作&lt;/li&gt;&#xA;&lt;li&gt;链表添加标签 &lt;code&gt;Cloneable&lt;/code&gt; 允许克隆&lt;/li&gt;&#xA;&lt;li&gt;链表实现 &lt;code&gt;Serializable&lt;/code&gt; 可以序列化&lt;/li&gt;&#xA;&lt;li&gt;链表线程不安全, 依赖外部同步&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hamhuo-hub/HamPic/img/img/20250207181217867.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
