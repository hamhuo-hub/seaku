<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>海阔知识库 on Hamhuo</title>
    <link>https://example.docsy.dev/</link>
    <description>Recent content in 海阔知识库 on Hamhuo</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://example.docsy.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>159.225 Assignment1</title>
      <link>https://example.docsy.dev/school/159.225/assignment1/assignment1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/school/159.225/assignment1/assignment1/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Aware of content healthy and reduce translate to English - Translate and reduce AI similarity&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;part1---assumptions--background&#34;&gt;Part1 - Assumptions &amp;amp; Background&lt;/h4&gt;&#xA;&lt;h4 id=&#34;part2---system-request&#34;&gt;Part2 - System Request&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250418094911347.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;==Q1: Description and Background? (sponsor)==&#xA;==Q2: Missing Mail introduce==&#xA;==C1: Delete option report function==&#xA;==C2: Assume different system has been used by IT depatement for a while==&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#2f1e2e;background-color:#e7e9db;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-plain&#34; data-lang=&#34;plain&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Project Sponsor: John smith from IT unit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Business Need: Five charities have been merged, each with its own system for tracking donors, donations, and communication. Complaints received from operations staff regarding complex processes and difficult management; and from donors regarding missing information, lack of feedback channels after donations, and delays in tracking donations; as well as the absence of a unified email system, making it difficult to attract potential donors.There is a need to create a system with single, unified database and mail function.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Business Requirements: The new system should be able to integrate donor details from all five previous systems, including information on potential and actual donors. It will track all donations made to the merged charity, regardless of the original charity&amp;#39;s source. The system will also contain a integrated mail function as conmmunicating method to consolidating various methods used by individual charities&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Business Value: reduce the administrative burden of managing multiple systems (by 40% in 5 month)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;attract potential donors&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rapid responce as well as tracking donations for donors (Satisfaction will increased by 30%.)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Special Issues or Constraints: Two large - scale systems have complete documentation, the other two have only user - facing documentation. Technical knowledge for these two systems may rely on staff demonstration, which could cause delays in the integration process.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;part3-technical-feasibility-analysis&#34;&gt;Part3 Technical Feasibility analysis&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250418094911348.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>3月17日</title>
      <link>https://example.docsy.dev/noteself/dairy/3%E6%9C%8817%E6%97%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/noteself/dairy/3%E6%9C%8817%E6%97%A5/</guid>
      <description>&lt;h4 id=&#34;零-大学只有两件事-寻找对象和寻找自我-这两件事完成一件就很了不起&#34;&gt;零. 大学只有两件事, 寻找对象和寻找自我, 这两件事完成一件就很了不起&lt;/h4&gt;&#xA;&lt;h4 id=&#34;一-建议每个程序员都能搭建一个自己的博客&#34;&gt;一. 建议每个程序员都能搭建一个自己的博客&lt;/h4&gt;&#xA;&lt;p&gt;一个百度谷歌搜索你的名字就能访问的个人名片&lt;/p&gt;&#xA;&lt;p&gt;博客不需要多么复杂, 学习笔记, 生活感悟, 一些日常生活的灵感, 个人哲学都可以写到上面&lt;/p&gt;&#xA;&lt;h4 id=&#34;二-几个非常有用的网站&#34;&gt;二. 几个非常有用的网站&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    //到百度搜下什么叫&amp;#34;出国机场&amp;#34;&#xA;&#x9;1. https://github.com/goeep/tuijianvpn&#xA;&#xA;&#x9;//java语言 是缺少资源/实验室/学长的情况下最适合入门和找实习的语言, 因为网上教程多&#xA;&#x9;2. https://javabetter.cn/&#xA;&#x9;3. https://liaoxuefeng.com/?src=redirect&#xA;&#xA;&#x9;//推荐所有人学习python, 大致了解下也好&#xA;&#x9;4. https://liaoxuefeng.com/books/python/introduction/index.html&#xA;&#xA;&#x9;//大二的线代大一的高数好好听, 后续忘记了没关系, 这种思维模式会支撑你学习其他领域&#xA;&#x9;5. https://www.3blue1brown.com/&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;三-对于希望实习的学弟&#34;&gt;三. 对于希望实习的学弟&lt;/h4&gt;&#xA;&lt;p&gt;来自学长的凉经&lt;/p&gt;&#xA;&lt;p&gt;雅思越早过越合适, 举个例子, 福建某985大三没有课程强制要求计院学生实习, 为什么? 因为厦大学生只用三年就可以修完所有学分并且专业技能达到职业标准. 这并不意味学校惨无人道, 这意味着公司秋招和春招是在大三进行的, 大一下就要开始确定方向并开始准备, 大二就要尝试实习, 大三正式拿到实习offer&lt;/p&gt;&#xA;&lt;p&gt;因此雅思越早完成就可以空出时间慢慢寻找自我&lt;/p&gt;&#xA;&lt;p&gt;四. 小心其他人突然抛出的观点&lt;/p&gt;</description>
    </item>
    <item>
      <title>Assignment1</title>
      <link>https://example.docsy.dev/school/159.261/assignment/assignment1/assignment1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/school/159.261/assignment/assignment1/assignment1/</guid>
      <description>&lt;h1 id=&#34;snake-game--assignment-1&#34;&gt;Snake Game — Assignment 1&lt;/h1&gt;&#xA;&lt;p&gt;&lt;em&gt;by Hamhuo&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;-introduction&#34;&gt;🕹 Introduction&lt;/h2&gt;&#xA;&lt;p&gt;This project is a classic Snake game implemented using Java AWT and a custom GameEngine. &lt;br&gt;&#xA;The player controls a snake moving on a 25×25 grid, growing longer by eating apples. &lt;br&gt;&#xA;The game ends if the snake hits the wall or collides with itself.&lt;/p&gt;&#xA;&lt;h2 id=&#34;-highlights&#34;&gt;✨ Highlights&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-efficient-direction-control&#34;&gt;1. Efficient Direction Control&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The snake&amp;rsquo;s movement direction is managed using &lt;strong&gt;numeric encoding combined with XOR operations&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Direct reversal (e.g., moving from LEFT to RIGHT immediately) is prevented with a simple and efficient one-line check:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#2f1e2e;background-color:#e7e9db;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#815ba4&#34;&gt;if&lt;/span&gt; ((direction.&lt;span style=&#34;color:#06b6ef&#34;&gt;getValue&lt;/span&gt;() &lt;span style=&#34;color:#5bc4bf&#34;&gt;^&lt;/span&gt; d.&lt;span style=&#34;color:#06b6ef&#34;&gt;getValue&lt;/span&gt;()) &lt;span style=&#34;color:#5bc4bf&#34;&gt;!=&lt;/span&gt; 2) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#815ba4&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#06b6ef&#34;&gt;direction&lt;/span&gt; &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; d;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;This approach is cleaner and more efficient than traditional if-else chains.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2-flexible-speed-and-length-configuration&#34;&gt;2. Flexible Speed and Length Configuration&lt;/h3&gt;&#xA;&lt;p&gt;Before starting the game, a settings dialog allows players to customize:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Assignment2</title>
      <link>https://example.docsy.dev/school/159.261/assignment/assignment2/assignment2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/school/159.261/assignment/assignment2/assignment2/</guid>
      <description>&lt;h4 id=&#34;目录&#34;&gt;目录&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;游戏引擎&lt;/li&gt;&#xA;&lt;li&gt;游戏架构&#xA;&lt;ul&gt;&#xA;&lt;li&gt;core 核心类库&lt;/li&gt;&#xA;&lt;li&gt;entity 角色实体类&lt;/li&gt;&#xA;&lt;li&gt;role 角色接口&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;开发细节&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Enemies 敌人&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;游戏引擎&#34;&gt;游戏引擎&lt;/h4&gt;&#xA;&lt;p&gt;我们已经有一个基础的游戏引擎类 &lt;code&gt;GameEngine&lt;/code&gt;，该类有如下方法&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250510150432521.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;数学方法&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250510150506105.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;绘图方法&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250510150618208.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;资源加载&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250511112434697.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;接口&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250510150738414.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;监听&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;游戏引擎是一个接口/抽象类，作为最底层的游戏引擎，其封装了游戏绘制运行所需的所有方法。只需要实现游戏引擎的接口即可（需要绘制那些对象/如何绘制），&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;paintCompoent()&lt;/code&gt;方法可视为绘制那些对象&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;update()&lt;/code&gt; 可视为怎样绘制对象&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250511112434697.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;需要重写的接口&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;游戏引擎作为封装游戏加载方法的抽象类，需要实现类编写绘制逻辑。&lt;/p&gt;&#xA;&lt;h4 id=&#34;游戏架构&#34;&gt;游戏架构&lt;/h4&gt;&#xA;&lt;p&gt;敌人，玩家，地图是该游戏最基础的组件并且特殊的实体需要继承相应接口，需要角色接口以及角色类包。&#xA;职责如下&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;移动算法&lt;/li&gt;&#xA;&lt;li&gt;动画逻辑/交互逻辑&lt;/li&gt;&#xA;&lt;li&gt;基础属性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;其中地图较为特殊，地图类负责创建和销毁实体。 &lt;code&gt;GameMap&lt;/code&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;销毁/创建实体&lt;/li&gt;&#xA;&lt;li&gt;地图布局&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;上述实体分别抽象为接口，放在 &lt;code&gt;role&lt;/code&gt; 和 &lt;code&gt;entity&lt;/code&gt; 下&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250511121548345.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;实体结构&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;游戏控制器作为引擎实现类来实际绘制所有游戏的对象 &lt;code&gt;GameController&lt;/code&gt;&#xA;职责如下&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;对象更新&lt;/li&gt;&#xA;&lt;li&gt;资源加载&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;节拍器 &lt;code&gt;Conductor&lt;/code&gt; 负责节奏控制，是所有对象的更新信号并且全局唯一&lt;/p&gt;&#xA;&lt;p&gt;因为动画较多，创建 &lt;code&gt;Animation&lt;/code&gt; 类统一管理&lt;/p&gt;&#xA;&lt;p&gt;以及其他全局枚举，不在此展开&lt;/p&gt;&#xA;&lt;p&gt;包括游戏引擎，上述是游戏核心类，放在 &lt;code&gt;core&lt;/code&gt; 核心类库中&lt;/p&gt;</description>
    </item>
    <item>
      <title>DINOv2</title>
      <link>https://example.docsy.dev/machinelearning/dinov2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/machinelearning/dinov2/</guid>
      <description>&lt;p&gt;目錄&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;ViT&lt;/li&gt;&#xA;&lt;li&gt;DINO&lt;/li&gt;&#xA;&lt;li&gt;DINOv2&#xA;3.1 論文與原理&#xA;3.2 代碼簡單分析&lt;/li&gt;&#xA;&lt;li&gt;sd-DINO&#xA;4.1 論文與原理&#xA;4.2. 代碼簡單分析&lt;/li&gt;&#xA;&lt;li&gt;總結&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h4 id=&#34;vit&#34;&gt;ViT&lt;/h4&gt;&#xA;&lt;p&gt;*&lt;code&gt;Transformer&lt;/code&gt; 在圖像上的拓展&#xA;&lt;a href=&#34;https://arxiv.org/abs/2010.11929&#34;&gt;An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale&lt;/a&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;===A neural network architecture that&amp;rsquo;s revolutionized natural language processing (NLP) and is now being used in various other fields like computer vision and audio generation==.&#xA;&amp;ndash;&lt;em&gt;wikipedia&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hamhuo-hub/HamPic/img/20250507002140282.png&#34; alt=&#34;Pasted image 20250505163912&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;經典的Transformer&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Transformer分爲兩部分，左側編碼層用於將數據（Token）投影到向量空間，其中相似的數據會投影到相似的向量。右側用於生成任務（GPT預測下一個詞）我們主要關注左側的編碼部分&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hamhuo-hub/HamPic/img/20250507002140283.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;經典Transformer中的示例，語義特徵相似的圖片方向相似（不是ViT）&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hamhuo-hub/HamPic/img/20250507002140284.png&#34; alt=&#34;Pasted image 20250505165805&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;嵌入可視化 左側是不同的交通標誌（如 STOP、ALTO、禁止進入、右轉等），每個圖像被編碼成一組特徵向量，- STOP 與 ALTO（西語“停止”）以及禁止進入標誌聚集在一起，右轉標誌則落在另一個明顯不同的區域。&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>FindPrime</title>
      <link>https://example.docsy.dev/codewar/findprime/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/codewar/findprime/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;DO NOT TRY to acquire fancy optimizations first&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#2f1e2e;background-color:#e7e9db;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#815ba4&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#fec418&#34;&gt;boolean&lt;/span&gt; &lt;span style=&#34;color:#06b6ef&#34;&gt;isPrime&lt;/span&gt;(&lt;span style=&#34;color:#fec418&#34;&gt;int&lt;/span&gt; num) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8d8687&#34;&gt;// single exception  &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#815ba4&#34;&gt;if&lt;/span&gt; (num &lt;span style=&#34;color:#5bc4bf&#34;&gt;==&lt;/span&gt; 2 &lt;span style=&#34;color:#5bc4bf&#34;&gt;||&lt;/span&gt; num &lt;span style=&#34;color:#5bc4bf&#34;&gt;==&lt;/span&gt; 5) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#815ba4&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;true&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } &lt;span style=&#34;color:#815ba4&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;if&lt;/span&gt; (num &lt;span style=&#34;color:#5bc4bf&#34;&gt;&amp;lt;&lt;/span&gt; 2) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#815ba4&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;false&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }    &lt;span style=&#34;color:#8d8687&#34;&gt;// last digit exception  &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#815ba4&#34;&gt;switch&lt;/span&gt; (num &lt;span style=&#34;color:#5bc4bf&#34;&gt;%&lt;/span&gt; 10) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#815ba4&#34;&gt;case&lt;/span&gt; 0:  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#815ba4&#34;&gt;case&lt;/span&gt; 2:  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#815ba4&#34;&gt;case&lt;/span&gt; 4:  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#815ba4&#34;&gt;case&lt;/span&gt; 5:  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#815ba4&#34;&gt;case&lt;/span&gt; 6:  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#815ba4&#34;&gt;case&lt;/span&gt; 8:  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#815ba4&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;false&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }    &lt;span style=&#34;color:#8d8687&#34;&gt;// else  &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#815ba4&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#fec418&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; 3; i &lt;span style=&#34;color:#5bc4bf&#34;&gt;&amp;lt;=&lt;/span&gt; Math.&lt;span style=&#34;color:#06b6ef&#34;&gt;sqrt&lt;/span&gt;(num); i &lt;span style=&#34;color:#5bc4bf&#34;&gt;+=&lt;/span&gt; 2) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#815ba4&#34;&gt;if&lt;/span&gt; (num &lt;span style=&#34;color:#5bc4bf&#34;&gt;%&lt;/span&gt; i &lt;span style=&#34;color:#5bc4bf&#34;&gt;==&lt;/span&gt; 0) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#815ba4&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;false&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }    }    &lt;span style=&#34;color:#815ba4&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;true&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>GetMiddle</title>
      <link>https://example.docsy.dev/codewar/getmiddle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/codewar/getmiddle/</guid>
      <description>&lt;p&gt;Two main key-concepts&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;length is odd&#xA;get middle number of string&lt;/li&gt;&#xA;&lt;li&gt;length is even&#xA;get middle 2 character&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#2f1e2e;background-color:#e7e9db;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#815ba4&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;static&lt;/span&gt; String &lt;span style=&#34;color:#06b6ef&#34;&gt;getMiddle&lt;/span&gt;(String word) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8d8687&#34;&gt;//Code goes here!  &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fec418&#34;&gt;int&lt;/span&gt; length &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; word.&lt;span style=&#34;color:#06b6ef&#34;&gt;length&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#815ba4&#34;&gt;if&lt;/span&gt;(length &lt;span style=&#34;color:#5bc4bf&#34;&gt;==&lt;/span&gt; 0) &lt;span style=&#34;color:#815ba4&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;null&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#815ba4&#34;&gt;return&lt;/span&gt; length&lt;span style=&#34;color:#5bc4bf&#34;&gt;%&lt;/span&gt;2 &lt;span style=&#34;color:#5bc4bf&#34;&gt;!=&lt;/span&gt; 0 &lt;span style=&#34;color:#5bc4bf&#34;&gt;?&lt;/span&gt; String.&lt;span style=&#34;color:#06b6ef&#34;&gt;valueOf&lt;/span&gt;(word.&lt;span style=&#34;color:#06b6ef&#34;&gt;charAt&lt;/span&gt;(length&lt;span style=&#34;color:#5bc4bf&#34;&gt;/&lt;/span&gt;2)) : word.&lt;span style=&#34;color:#06b6ef&#34;&gt;substring&lt;/span&gt;(length&lt;span style=&#34;color:#5bc4bf&#34;&gt;/&lt;/span&gt;2&lt;span style=&#34;color:#5bc4bf&#34;&gt;-&lt;/span&gt;1,length&lt;span style=&#34;color:#5bc4bf&#34;&gt;/&lt;/span&gt;2&lt;span style=&#34;color:#5bc4bf&#34;&gt;+&lt;/span&gt;1);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Most part is return substring 2 characters. This method has complexity O(n)&lt;/p&gt;&#xA;&lt;p&gt;We can improve to O(1), BY replacing substring to charAt&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#2f1e2e;background-color:#e7e9db;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#815ba4&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;static&lt;/span&gt; String &lt;span style=&#34;color:#06b6ef&#34;&gt;getMiddle&lt;/span&gt;(String word) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8d8687&#34;&gt;//Code goes here!  &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fec418&#34;&gt;int&lt;/span&gt; length &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; word.&lt;span style=&#34;color:#06b6ef&#34;&gt;length&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#815ba4&#34;&gt;if&lt;/span&gt;(length &lt;span style=&#34;color:#5bc4bf&#34;&gt;==&lt;/span&gt; 0) &lt;span style=&#34;color:#815ba4&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;null&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#815ba4&#34;&gt;return&lt;/span&gt; length&lt;span style=&#34;color:#5bc4bf&#34;&gt;%&lt;/span&gt;2 &lt;span style=&#34;color:#5bc4bf&#34;&gt;!=&lt;/span&gt; 0 &lt;span style=&#34;color:#5bc4bf&#34;&gt;?&lt;/span&gt; String.&lt;span style=&#34;color:#06b6ef&#34;&gt;valueOf&lt;/span&gt;(word.&lt;span style=&#34;color:#06b6ef&#34;&gt;charAt&lt;/span&gt;(length&lt;span style=&#34;color:#5bc4bf&#34;&gt;/&lt;/span&gt;2)) : word.&lt;span style=&#34;color:#06b6ef&#34;&gt;charAt&lt;/span&gt;(length&lt;span style=&#34;color:#5bc4bf&#34;&gt;/&lt;/span&gt;2&lt;span style=&#34;color:#5bc4bf&#34;&gt;-&lt;/span&gt;1) &lt;span style=&#34;color:#5bc4bf&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#48b685&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#5bc4bf&#34;&gt;+&lt;/span&gt; word.&lt;span style=&#34;color:#06b6ef&#34;&gt;charAt&lt;/span&gt;(length&lt;span style=&#34;color:#5bc4bf&#34;&gt;/&lt;/span&gt;2);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>IsNarcissistic</title>
      <link>https://example.docsy.dev/codewar/narcissisticnumber/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/codewar/narcissisticnumber/</guid>
      <description>&lt;p&gt;A &lt;a href=&#34;https://en.wikipedia.org/wiki/Narcissistic_number&#34;&gt;Narcissistic Number&lt;/a&gt; (or Armstrong Number) is a positive number which is the sum of its own digits, each raised to the power of the number of digits in a given base. In this Kata, we will restrict ourselves to decimal (base 10).&lt;/p&gt;&#xA;&lt;p&gt;For example, take 153 (3 digits), which is narcissistic:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    1^3 + 5^3 + 3^3 = 1 + 125 + 27 = 153&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and 1652 (4 digits), which isn&amp;rsquo;t:&lt;/p&gt;</description>
    </item>
    <item>
      <title>lab3</title>
      <link>https://example.docsy.dev/school/159.225/week3/lab3/lab3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/school/159.225/week3/lab3/lab3/</guid>
      <description>&lt;p&gt;Use-case Description&lt;/p&gt;&#xA;&lt;p&gt;A user-side function model.&#xA;not sequense model&lt;/p&gt;&#xA;&lt;p&gt;Do not internal system components into user-side model. It&amp;rsquo;s no useful to users&lt;/p&gt;&#xA;&lt;p&gt;an use action is connected with a straight line&lt;/p&gt;</description>
    </item>
    <item>
      <title>NumberFun</title>
      <link>https://example.docsy.dev/codewar/numberfun/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/codewar/numberfun/</guid>
      <description>&lt;p&gt;You might know some pretty large perfect squares. But what about the NEXT one?&lt;/p&gt;&#xA;&lt;p&gt;Complete the &lt;code&gt;findNextSquare&lt;/code&gt; method that finds the next integral perfect square after the one passed as a parameter. Recall that an integral perfect square is an integer n such that sqrt(n) is also an integer.&lt;/p&gt;&#xA;&lt;p&gt;If the argument is itself not a perfect square then return either &lt;code&gt;-1&lt;/code&gt; or an empty value like &lt;code&gt;None&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;, depending on your language. You may assume the argument is non-negative.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Palindrome</title>
      <link>https://example.docsy.dev/codewar/validatepin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/codewar/validatepin/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;String.Match()&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;ATM machines allow 4 or 6 digit PIN codes and PIN codes cannot contain anything but &lt;strong&gt;exactly&lt;/strong&gt; 4 digits or exactly 6 digits.&lt;/p&gt;&#xA;&lt;p&gt;If the function is passed a valid PIN string, return &lt;code&gt;true&lt;/code&gt;, else return &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;two important cases&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;no letters&lt;/li&gt;&#xA;&lt;li&gt;length limited&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;key: how to limit string in certain format&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;ASII code to range numbers, use &lt;code&gt;String.length&lt;/code&gt; to limit digits length&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;==be aware of ture and false==  we can simply coding&lt;/p&gt;</description>
    </item>
    <item>
      <title>PangramChecker</title>
      <link>https://example.docsy.dev/codewar/pangramchecker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/codewar/pangramchecker/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;String.chars()&#xA;Stream.map()&#xA;Stream.distinct()&#xA;Character.isAlphabetic()&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Pre-pocess String. Use HashSet remove redundent numbers and non-alpha&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#2f1e2e;background-color:#e7e9db;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#815ba4&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#fec418&#34;&gt;boolean&lt;/span&gt; &lt;span style=&#34;color:#06b6ef&#34;&gt;check&lt;/span&gt;(String sentence){  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8d8687&#34;&gt;// sort chars in sentences  &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fec418&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color:#5bc4bf&#34;&gt;[]&lt;/span&gt; charArray &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; sentence.&lt;span style=&#34;color:#06b6ef&#34;&gt;toLowerCase&lt;/span&gt;().&lt;span style=&#34;color:#06b6ef&#34;&gt;trim&lt;/span&gt;().&lt;span style=&#34;color:#06b6ef&#34;&gt;toCharArray&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Arrays.&lt;span style=&#34;color:#06b6ef&#34;&gt;sort&lt;/span&gt;(charArray);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    HashSet&lt;span style=&#34;color:#5bc4bf&#34;&gt;&amp;lt;&lt;/span&gt;Character&lt;span style=&#34;color:#5bc4bf&#34;&gt;&amp;gt;&lt;/span&gt; set &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;new&lt;/span&gt; HashSet&lt;span style=&#34;color:#5bc4bf&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#815ba4&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#fec418&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; 0; i &lt;span style=&#34;color:#5bc4bf&#34;&gt;&amp;lt;&lt;/span&gt; charArray.&lt;span style=&#34;color:#06b6ef&#34;&gt;length&lt;/span&gt;; i&lt;span style=&#34;color:#5bc4bf&#34;&gt;++&lt;/span&gt;) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#815ba4&#34;&gt;if&lt;/span&gt;(set.&lt;span style=&#34;color:#06b6ef&#34;&gt;contains&lt;/span&gt;(charArray&lt;span style=&#34;color:#5bc4bf&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#5bc4bf&#34;&gt;]&lt;/span&gt;)){  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#815ba4&#34;&gt;continue&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&lt;span style=&#34;color:#815ba4&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;if&lt;/span&gt;(charArray&lt;span style=&#34;color:#5bc4bf&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#5bc4bf&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#5bc4bf&#34;&gt;&amp;gt;=&lt;/span&gt; 97 &lt;span style=&#34;color:#5bc4bf&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; charArray&lt;span style=&#34;color:#5bc4bf&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#5bc4bf&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#5bc4bf&#34;&gt;&amp;lt;=&lt;/span&gt; 122){  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            set.&lt;span style=&#34;color:#06b6ef&#34;&gt;add&lt;/span&gt;(charArray&lt;span style=&#34;color:#5bc4bf&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#5bc4bf&#34;&gt;]&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }    }    System.&lt;span style=&#34;color:#06b6ef&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#06b6ef&#34;&gt;println&lt;/span&gt;(set);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#815ba4&#34;&gt;return&lt;/span&gt; set.&lt;span style=&#34;color:#06b6ef&#34;&gt;size&lt;/span&gt;() &lt;span style=&#34;color:#5bc4bf&#34;&gt;==&lt;/span&gt; 26;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That&amp;rsquo;s not beautiful enough, for removing we can use &lt;code&gt;distinct()&lt;/code&gt; and &lt;code&gt;filter()&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#2f1e2e;background-color:#e7e9db;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#815ba4&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#fec418&#34;&gt;boolean&lt;/span&gt; &lt;span style=&#34;color:#06b6ef&#34;&gt;check&lt;/span&gt;(String sentence) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#815ba4&#34;&gt;return&lt;/span&gt; sentence.&lt;span style=&#34;color:#06b6ef&#34;&gt;chars&lt;/span&gt;().&lt;span style=&#34;color:#06b6ef&#34;&gt;map&lt;/span&gt;(Character::toLowerCase).&lt;span style=&#34;color:#06b6ef&#34;&gt;filter&lt;/span&gt;(Character::isAlphabetic).&lt;span style=&#34;color:#06b6ef&#34;&gt;distinct&lt;/span&gt;().&lt;span style=&#34;color:#06b6ef&#34;&gt;count&lt;/span&gt;() &lt;span style=&#34;color:#5bc4bf&#34;&gt;==&lt;/span&gt; 26;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;But we can also check if sentence contain all A-Z, with a special for loop&lt;/p&gt;</description>
    </item>
    <item>
      <title>PhoneNumber</title>
      <link>https://example.docsy.dev/codewar/phonenumber/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/codewar/phonenumber/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;String.format()&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;First try, Prefixed numbers is fixed&lt;/p&gt;&#xA;&lt;p&gt;we can simply cut out&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#2f1e2e;background-color:#e7e9db;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#815ba4&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;static&lt;/span&gt; String &lt;span style=&#34;color:#06b6ef&#34;&gt;createPhoneNumber&lt;/span&gt;(&lt;span style=&#34;color:#fec418&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#5bc4bf&#34;&gt;[]&lt;/span&gt; numbers) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8d8687&#34;&gt;// Your code here!  &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    String country &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; numbers&lt;span style=&#34;color:#5bc4bf&#34;&gt;[&lt;/span&gt;0&lt;span style=&#34;color:#5bc4bf&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#5bc4bf&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#48b685&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#5bc4bf&#34;&gt;+&lt;/span&gt; numbers&lt;span style=&#34;color:#5bc4bf&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#5bc4bf&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#5bc4bf&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#48b685&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#5bc4bf&#34;&gt;+&lt;/span&gt; numbers&lt;span style=&#34;color:#5bc4bf&#34;&gt;[&lt;/span&gt;2&lt;span style=&#34;color:#5bc4bf&#34;&gt;]&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    String area &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; numbers&lt;span style=&#34;color:#5bc4bf&#34;&gt;[&lt;/span&gt;3&lt;span style=&#34;color:#5bc4bf&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#5bc4bf&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#48b685&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#5bc4bf&#34;&gt;+&lt;/span&gt; numbers&lt;span style=&#34;color:#5bc4bf&#34;&gt;[&lt;/span&gt;4&lt;span style=&#34;color:#5bc4bf&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#5bc4bf&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#48b685&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#5bc4bf&#34;&gt;+&lt;/span&gt; numbers&lt;span style=&#34;color:#5bc4bf&#34;&gt;[&lt;/span&gt;5&lt;span style=&#34;color:#5bc4bf&#34;&gt;]&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    String pop &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#48b685&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#815ba4&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#fec418&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; 6; i &lt;span style=&#34;color:#5bc4bf&#34;&gt;&amp;lt;=&lt;/span&gt; numbers.&lt;span style=&#34;color:#06b6ef&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#5bc4bf&#34;&gt;-&lt;/span&gt; 1; i&lt;span style=&#34;color:#5bc4bf&#34;&gt;++&lt;/span&gt;) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        pop &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; pop &lt;span style=&#34;color:#5bc4bf&#34;&gt;+&lt;/span&gt; numbers&lt;span style=&#34;color:#5bc4bf&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#5bc4bf&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#5bc4bf&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#48b685&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }    &lt;span style=&#34;color:#815ba4&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#48b685&#34;&gt;&amp;#34;(&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#5bc4bf&#34;&gt;+&lt;/span&gt; country &lt;span style=&#34;color:#5bc4bf&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#48b685&#34;&gt;&amp;#34;)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#5bc4bf&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#48b685&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#5bc4bf&#34;&gt;+&lt;/span&gt; area &lt;span style=&#34;color:#5bc4bf&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#48b685&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#5bc4bf&#34;&gt;+&lt;/span&gt; pop;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;76ms&lt;/p&gt;&#xA;&lt;p&gt;But There has an more elegant way to do so.&lt;/p&gt;&#xA;&lt;p&gt;Use &lt;code&gt;String.format()&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#2f1e2e;background-color:#e7e9db;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#815ba4&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;static&lt;/span&gt; String &lt;span style=&#34;color:#06b6ef&#34;&gt;createPhoneNumber&lt;/span&gt;(&lt;span style=&#34;color:#fec418&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#5bc4bf&#34;&gt;[]&lt;/span&gt; numbers){  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#815ba4&#34;&gt;return&lt;/span&gt; String.&lt;span style=&#34;color:#06b6ef&#34;&gt;format&lt;/span&gt;(&lt;span style=&#34;color:#48b685&#34;&gt;&amp;#34;(%d%d%d) %d%d%d-%d%d%d%d&amp;#34;&lt;/span&gt;,numbers&lt;span style=&#34;color:#5bc4bf&#34;&gt;[&lt;/span&gt;0&lt;span style=&#34;color:#5bc4bf&#34;&gt;]&lt;/span&gt;,numbers&lt;span style=&#34;color:#5bc4bf&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#5bc4bf&#34;&gt;]&lt;/span&gt;,numbers&lt;span style=&#34;color:#5bc4bf&#34;&gt;[&lt;/span&gt;2&lt;span style=&#34;color:#5bc4bf&#34;&gt;]&lt;/span&gt;,numbers&lt;span style=&#34;color:#5bc4bf&#34;&gt;[&lt;/span&gt;3&lt;span style=&#34;color:#5bc4bf&#34;&gt;]&lt;/span&gt;,numbers&lt;span style=&#34;color:#5bc4bf&#34;&gt;[&lt;/span&gt;4&lt;span style=&#34;color:#5bc4bf&#34;&gt;]&lt;/span&gt;,numbers&lt;span style=&#34;color:#5bc4bf&#34;&gt;[&lt;/span&gt;5&lt;span style=&#34;color:#5bc4bf&#34;&gt;]&lt;/span&gt;,numbers&lt;span style=&#34;color:#5bc4bf&#34;&gt;[&lt;/span&gt;6&lt;span style=&#34;color:#5bc4bf&#34;&gt;]&lt;/span&gt;,numbers&lt;span style=&#34;color:#5bc4bf&#34;&gt;[&lt;/span&gt;7&lt;span style=&#34;color:#5bc4bf&#34;&gt;]&lt;/span&gt;,numbers&lt;span style=&#34;color:#5bc4bf&#34;&gt;[&lt;/span&gt;8&lt;span style=&#34;color:#5bc4bf&#34;&gt;]&lt;/span&gt;,numbers&lt;span style=&#34;color:#5bc4bf&#34;&gt;[&lt;/span&gt;9&lt;span style=&#34;color:#5bc4bf&#34;&gt;]&lt;/span&gt; );  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;But this method have to compile formatter, which caused extra time.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SpinWords</title>
      <link>https://example.docsy.dev/codewar/spinwords/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/codewar/spinwords/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;StringBuilder.reverse()&lt;/code&gt;&#xA;&lt;code&gt;String.join()&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Test Sample is complex, we can process to beauty input&lt;/p&gt;&#xA;&lt;p&gt;first try&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#2f1e2e;background-color:#e7e9db;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#815ba4&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;static&lt;/span&gt; String &lt;span style=&#34;color:#06b6ef&#34;&gt;spinWords&lt;/span&gt;(String sentence) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8d8687&#34;&gt;//TODO: Code stuff here  &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    StringBuilder result &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;new&lt;/span&gt; StringBuilder();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    StringBuilder word &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;new&lt;/span&gt; StringBuilder();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fec418&#34;&gt;int&lt;/span&gt; count &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; 0;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#815ba4&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#fec418&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; 0; i &lt;span style=&#34;color:#5bc4bf&#34;&gt;&amp;lt;&lt;/span&gt; sentence.&lt;span style=&#34;color:#06b6ef&#34;&gt;length&lt;/span&gt;(); i&lt;span style=&#34;color:#5bc4bf&#34;&gt;++&lt;/span&gt;) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fec418&#34;&gt;char&lt;/span&gt; ch &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; sentence.&lt;span style=&#34;color:#06b6ef&#34;&gt;charAt&lt;/span&gt;(i);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#815ba4&#34;&gt;if&lt;/span&gt; (ch &lt;span style=&#34;color:#5bc4bf&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#48b685&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#815ba4&#34;&gt;if&lt;/span&gt;(count &lt;span style=&#34;color:#5bc4bf&#34;&gt;&amp;gt;=&lt;/span&gt; 5) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                result.&lt;span style=&#34;color:#06b6ef&#34;&gt;append&lt;/span&gt;(reverse(word));  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }            &lt;span style=&#34;color:#815ba4&#34;&gt;else&lt;/span&gt; {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                result.&lt;span style=&#34;color:#06b6ef&#34;&gt;append&lt;/span&gt;(word.&lt;span style=&#34;color:#06b6ef&#34;&gt;toString&lt;/span&gt;());  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }            result.&lt;span style=&#34;color:#06b6ef&#34;&gt;append&lt;/span&gt;(&lt;span style=&#34;color:#48b685&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            word &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;new&lt;/span&gt; StringBuilder(&lt;span style=&#34;color:#48b685&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            count &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; 0;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#815ba4&#34;&gt;continue&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }        word.&lt;span style=&#34;color:#06b6ef&#34;&gt;append&lt;/span&gt;(ch);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        count&lt;span style=&#34;color:#5bc4bf&#34;&gt;++&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#815ba4&#34;&gt;if&lt;/span&gt; (i &lt;span style=&#34;color:#5bc4bf&#34;&gt;==&lt;/span&gt; sentence.&lt;span style=&#34;color:#06b6ef&#34;&gt;length&lt;/span&gt;() &lt;span style=&#34;color:#5bc4bf&#34;&gt;-&lt;/span&gt; 1) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#815ba4&#34;&gt;if&lt;/span&gt;(count &lt;span style=&#34;color:#5bc4bf&#34;&gt;&amp;gt;=&lt;/span&gt; 5) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                result.&lt;span style=&#34;color:#06b6ef&#34;&gt;append&lt;/span&gt;(reverse(word));  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }            &lt;span style=&#34;color:#815ba4&#34;&gt;else&lt;/span&gt; result.&lt;span style=&#34;color:#06b6ef&#34;&gt;append&lt;/span&gt;(word.&lt;span style=&#34;color:#06b6ef&#34;&gt;toString&lt;/span&gt;());  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }    }    &lt;span style=&#34;color:#815ba4&#34;&gt;return&lt;/span&gt; result.&lt;span style=&#34;color:#06b6ef&#34;&gt;toString&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#815ba4&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;static&lt;/span&gt; String &lt;span style=&#34;color:#06b6ef&#34;&gt;reverse&lt;/span&gt;(StringBuilder word) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    StringBuilder result &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;new&lt;/span&gt; StringBuilder();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#815ba4&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#fec418&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; word.&lt;span style=&#34;color:#06b6ef&#34;&gt;length&lt;/span&gt;() &lt;span style=&#34;color:#5bc4bf&#34;&gt;-&lt;/span&gt; 1; i &lt;span style=&#34;color:#5bc4bf&#34;&gt;&amp;gt;=&lt;/span&gt; 0; i&lt;span style=&#34;color:#5bc4bf&#34;&gt;--&lt;/span&gt;) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        result.&lt;span style=&#34;color:#06b6ef&#34;&gt;append&lt;/span&gt;(word.&lt;span style=&#34;color:#06b6ef&#34;&gt;charAt&lt;/span&gt;(i));  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }    &lt;span style=&#34;color:#815ba4&#34;&gt;return&lt;/span&gt; result.&lt;span style=&#34;color:#06b6ef&#34;&gt;toString&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That way too difficult. Actually, &lt;code&gt;StringBuilder&lt;/code&gt; has method reverse&lt;/p&gt;</description>
    </item>
    <item>
      <title>StringSplit</title>
      <link>https://example.docsy.dev/codewar/stringsplit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/codewar/stringsplit/</guid>
      <description>&lt;p&gt;similar as &lt;a href=&#34;https://example.docsy.dev/codewar/getmiddle/&#34;&gt;GetMiddle&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Different part is This kata need return all numbers (included &amp;lsquo;__&amp;rsquo;)&lt;/p&gt;&#xA;&lt;p&gt;Add __ in front of loop&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#2f1e2e;background-color:#e7e9db;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#815ba4&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;static&lt;/span&gt; String&lt;span style=&#34;color:#5bc4bf&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#06b6ef&#34;&gt;solution&lt;/span&gt;(String s) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8d8687&#34;&gt;//Write your code here  &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fec418&#34;&gt;int&lt;/span&gt; l &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; s.&lt;span style=&#34;color:#06b6ef&#34;&gt;length&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#815ba4&#34;&gt;if&lt;/span&gt;(l&lt;span style=&#34;color:#5bc4bf&#34;&gt;%&lt;/span&gt;2 &lt;span style=&#34;color:#5bc4bf&#34;&gt;!=&lt;/span&gt; 0){  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        s &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; s&lt;span style=&#34;color:#5bc4bf&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#48b685&#34;&gt;&amp;#34;_&amp;#34;&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        l &lt;span style=&#34;color:#5bc4bf&#34;&gt;+=&lt;/span&gt; 1;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }    String&lt;span style=&#34;color:#5bc4bf&#34;&gt;[]&lt;/span&gt; result &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#815ba4&#34;&gt;new&lt;/span&gt; String&lt;span style=&#34;color:#5bc4bf&#34;&gt;[&lt;/span&gt;l&lt;span style=&#34;color:#5bc4bf&#34;&gt;/&lt;/span&gt;2&lt;span style=&#34;color:#5bc4bf&#34;&gt;]&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fec418&#34;&gt;int&lt;/span&gt; j &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; 0;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#815ba4&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#fec418&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt;0; i&lt;span style=&#34;color:#5bc4bf&#34;&gt;&amp;lt;=&lt;/span&gt;l&lt;span style=&#34;color:#5bc4bf&#34;&gt;-&lt;/span&gt;2;){  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             substring complexity is &lt;span style=&#34;color:#06b6ef&#34;&gt;O&lt;/span&gt;(n)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        result&lt;span style=&#34;color:#5bc4bf&#34;&gt;[&lt;/span&gt;j&lt;span style=&#34;color:#5bc4bf&#34;&gt;]=&lt;/span&gt;(s.&lt;span style=&#34;color:#06b6ef&#34;&gt;substring&lt;/span&gt;(i,i&lt;span style=&#34;color:#5bc4bf&#34;&gt;+&lt;/span&gt;2));  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        i&lt;span style=&#34;color:#5bc4bf&#34;&gt;+=&lt;/span&gt;2;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        j&lt;span style=&#34;color:#5bc4bf&#34;&gt;++&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }    &lt;span style=&#34;color:#815ba4&#34;&gt;return&lt;/span&gt; result;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Same as [[GetMiddle]] we can replace substring with charAt&lt;/p&gt;</description>
    </item>
    <item>
      <title>week9</title>
      <link>https://example.docsy.dev/school/159.261/week9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/school/159.261/week9/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512103056436.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;响应控制器&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;==NOT SMART ENOUGH==&lt;/p&gt;&#xA;&lt;p&gt;引入随机性&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512103211730.png&#34; alt=&#34;image.png&#34;&gt;&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512103243398.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;攻击的概率&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;相比于简单的 if-else, 引入状态机&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512103422980.png&#34; alt=&#34;image.png&#34;&gt;&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512103452068.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;State&lt;/em&gt; 状态机&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512103653643.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;例子, &lt;em&gt;状态间的转换&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512103935627.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;入口类，进入状态前的初始化&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512104005710.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;很适合小型游戏&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512104159636.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;大型游戏中状态机的弊端&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;大型游戏，引入决策树&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512104248370.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;决策树&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512104457842.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;决策树实例，一个分支代表一种行为&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512104958841.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;人工智能控制器的使用范围&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;搜索算法&#xA;极小化极大算法 Minimax&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512105716475.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Minimax alog&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;目的是最小化最大损失，也就是让对方少得分。优先排除最坏情况(对方得分最高情况)&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512110236762.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;MiniMax&lt;/em&gt; &lt;em&gt;原理&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;当树规模太大时可以剪枝&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512111847453.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://example.docsy.dev/school/159.225/week8_9/lab8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/school/159.225/week8_9/lab8/</guid>
      <description>&lt;p&gt;方法签名&#xA;前置/后置/不变&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512143653554.png&#34; alt=&#34;image.png&#34;&gt;&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512143801360.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;代码复用&#34;&gt;代码复用&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512143901496.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;设计模式&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512143933207.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;框架&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512143948715.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;库&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;不必重造轮子&#xA;&lt;em&gt;新技术会携带风险&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512144147383.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;风险: 依赖不可控&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;优化代码&#34;&gt;优化代码&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512144458892.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;fan-out 和 fan-in&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512144602145.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512144854403.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;触发器&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512144956999.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;对象设计不要用流程语言&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;contracts-接口&#34;&gt;Contracts 接口&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512145625667.png&#34; alt=&#34;image.png&#34;&gt;&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512145148612.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;接口由约束和返回值组成&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;接口表述&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512145343883.png&#34; alt=&#34;image.png&#34;&gt;&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512145352368.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;接口语言&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512145441177.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;接口中约束的类型&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512145613061.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;接口实例&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512145744846.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://example.docsy.dev/school/159.225/week8_9/lab9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/school/159.225/week8_9/lab9/</guid>
      <description>&lt;h4 id=&#34;系统架构&#34;&gt;系统架构&lt;/h4&gt;&#xA;&lt;p&gt;软硬间如何结合？软件如何运行&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;架构种类&#xA;&lt;ul&gt;&#xA;&lt;li&gt;软件架构&lt;/li&gt;&#xA;&lt;li&gt;硬件架构&lt;/li&gt;&#xA;&lt;li&gt;系统架构&lt;/li&gt;&#xA;&lt;li&gt;信息架构&lt;/li&gt;&#xA;&lt;li&gt;企业架构&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512150853595.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;组件&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512151124777.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;什么是系统架构&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512151519081.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;使用CORBA语言的架构&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;经典的3层架构&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512152907123.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;经典的3层架构&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512153002986.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;经典的数据分发可能逻辑层很小&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512153114970.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;或者很大&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512153105157.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;展示层&#xA;需要接口与用户互动&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512153214822.png&#34; alt=&#34;image.png&#34;&gt;&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512153221608.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;基于服务器架构，终端是笨主机&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512153633492.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512153943402.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;基于客户架构&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512154044361.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512154255906.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;CS架构&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512154508167.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;轻型客户端 - 云上应用&#xA;重型客户端 - 本地应用&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250512155015507.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docsy 折腾日志</title>
      <link>https://example.docsy.dev/noteself/docsy_init/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/noteself/docsy_init/</guid>
      <description>&lt;h4 id=&#34;docsy调色&#34;&gt;Docsy调色&lt;/h4&gt;&#xA;&lt;p&gt;docsy的默认颜色只有蓝色和白色希望美化为更加现代的风格&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250513125859815.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;于是查阅了Docsy的日志所有的样式文件都可以在scss样式表中重写&lt;/p&gt;&#xA;&lt;p&gt;目录如下 &lt;code&gt;scss/_variables_project.scss&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h5 id=&#34;背景色&#34;&gt;背景色&lt;/h5&gt;&#xA;&lt;p&gt;使用最浅的 &lt;code&gt;#FFFBDE&lt;/code&gt; 作为背景色&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#2f1e2e;background-color:#e7e9db;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-scss&#34; data-lang=&#34;scss&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8d8687&#34;&gt;/*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8d8687&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8d8687&#34;&gt;Projects can override this file. For details, see:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8d8687&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8d8687&#34;&gt;https://www.docsy.dev/docs/adding-content/lookandfeel/#project-style-files&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8d8687&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8d8687&#34;&gt;*/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ef6155&#34;&gt;$body-bg&lt;/span&gt;&lt;span style=&#34;color:#5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f99b15&#34;&gt;#FFFBDE&lt;/span&gt;;  &lt;span style=&#34;color:#8d8687&#34;&gt;// 确保没有语法错误&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;ctrl + f5&lt;/code&gt; 强制慢刷新&lt;/p&gt;&#xA;&lt;h5 id=&#34;标题色&#34;&gt;标题色&lt;/h5&gt;</description>
    </item>
    <item>
      <title>Ubantu 随笔</title>
      <link>https://example.docsy.dev/noteself/ubantu_init/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/noteself/ubantu_init/</guid>
      <description>&lt;h4 id=&#34;ubantu-的中文打字問題&#34;&gt;Ubantu 的中文打字問題&lt;/h4&gt;&#xA;&lt;p&gt;一開始在Reddit上推薦基於fcitx4的“搜狗輸入法”，實際體驗下來由於架構過時了導致在最新版本的Ubantu上會出現面板閃爍，崩潰的問題&lt;/p&gt;&#xA;&lt;p&gt;朋友推薦下選擇 RIME，但是fcitx架構已經安裝抱着廢物利用的想法選擇了RIME的分支“Fcitx-RIME”&lt;/p&gt;&#xA;&lt;p&gt;日常文字輸入還好，但是筆者日用筆記本是 Obsidian，輸入法在這個軟件居然不起作用，歷經多方波折瞭解到 QT的移植軟件由於兼容性的問題不內置fcitx的支持&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;PS: 確實有兼容性問題，但是Obsidian是因爲Snap收錄時沒有添加輸入支持，直接下載官方的Appimage文件運行就好，綠色無污染&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;實在不想折騰。不得不換用IBUS，下面記錄下Ibus-rime在Ubantu的安裝&lt;/p&gt;&#xA;&lt;p&gt;Ubantu 收錄了 rime&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt-get install ibus-rime&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;完成後需要在語言地區加入中文，並更換輸入架構爲IBus&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hamhuo-hub/HamPic/img/20250501170758225.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;完成後打開終端，設置IBus架構&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ ibus-setup&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hamhuo-hub/HamPic/img/20250428210813014.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;要在IBus首選項中加入RIME，沒有的點選Add就可以看到&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hamhuo-hub/HamPic/img/20250428210813015.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;架構設置完畢後打開系統設置選單，在鍵盤中加入中文鍵盤佈局設置輸入元爲RIME&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hamhuo-hub/HamPic/img/20250428210813017.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hamhuo-hub/HamPic/img/20250428210813018.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;註銷重啓&lt;/strong&gt;&lt;/em&gt;， 這個很重要，重啓後即可使用&lt;/p&gt;&#xA;&lt;p&gt;如果在某些軟件無法輸入中文，把下列系統變量加入bashrc&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gedit ~/.bashrc&#xA;# 或者&#xA;vim ~/.bashrc&#xA;# 加入下列變量&#xA;export GTK_IM_MODULE=&amp;#34;ibus&amp;#34;&#xA;export QT_IM_MODULE=&amp;#34;ibus&amp;#34;&#xA;export XMODIFIERS=&amp;#34;@im=ibus&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hamhuo-hub/HamPic/img/20250428210813019.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;重新加載配置文件&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ source ~/.bashrc&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;結束&lt;/p&gt;&#xA;&lt;h4 id=&#34;linux-下的-picgo-與-obsidian-使用&#34;&gt;Linux 下的 Picgo 與 Obsidian 使用&lt;/h4&gt;&#xA;&lt;p&gt;白板“Obsidian” 在官網有適用於 Debian系的 Appiamge&lt;/p&gt;&#xA;&lt;p&gt;下載完畢後右鍵點擊&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hamhuo-hub/HamPic/img/20250501171008218.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;將視爲可執行文件選項選中&lt;/p&gt;&#xA;&lt;p&gt;雙擊即可運行&lt;/p&gt;&#xA;&lt;h5 id=&#34;製作快捷方式&#34;&gt;製作快捷方式&lt;/h5&gt;&#xA;&lt;p&gt;在 &lt;code&gt;/usr/share/applications&lt;/code&gt; 目錄下存放着許多 &lt;code&gt;desktop&lt;/code&gt; 後綴的文件&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hamhuo-hub/HamPic/img/20250501171217665.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://example.docsy.dev/noteself/dairy/2%E6%9C%8810%E6%97%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/noteself/dairy/2%E6%9C%8810%E6%97%A5/</guid>
      <description>&lt;p&gt;知识网络的构建非常有效&#xA;完成了知识体系梳理, 让知识点之间互相联系, 达到互相补充的目的, 达到系统性学习的要求&#xA;使用Obisidian后完成单元的时间从1个月缩短至5天&lt;/p&gt;&#xA;&lt;p&gt;目前的问题:&#xA;在知识点构建过程会引用未知知识点, 如果使用深度优先策略会导致单个知识点构建时间过长&#xA;使用广度优先策略会导致知识点构建不充分, 导致难以理解甚至错误&lt;/p&gt;&#xA;&lt;p&gt;todo:&#xA;找到构建知识点的策略&lt;/p&gt;&#xA;&lt;p&gt;待实践:&#xA;层次递进法（分层次学习）&lt;/p&gt;&#xA;&lt;p&gt;先广度遍历建立基础，再针对难点深度学习。&#xA;先粗略标注知识点（例如在 Obsidian 中使用标签），然后逐步填充内容。&#xA;设定“&lt;em&gt;&lt;strong&gt;深度阈值&lt;/strong&gt;&lt;/em&gt;”，例如最多深入两层，避免陷入细节漩涡。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;关键路径法（关键知识点优先）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;找出知识体系中的核心概念（如“动机图”或“概念网络”），优先构建这些关键点。&#xA;采用“知识辐射”策略，从&lt;em&gt;&lt;strong&gt;核心知识点&lt;/strong&gt;&lt;/em&gt;向外扩展，保证整体理解不受阻碍。&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;自适应探索法（按难度动态调整）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;在学习过程中动态调整策略：遇到理解困难时，切换为局部深度探索，否则维持广度推进。&#xA;利用&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;问题驱动学习（Problem-Based Learning, PBL），遇到卡点时再深入，而非预先穷举所有相关知识。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;时间配额法（限制单个知识点时间）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;设定时间上限，例如每个&lt;em&gt;&lt;strong&gt;知识点最多20分钟&lt;/strong&gt;&lt;/em&gt;，如果仍有未解决的问题，则标记为“待深入”，后续再集中攻克。&#xA;通过设定学习周期（如“5天初步构建，10天复盘深化”）来避免单点耗时过多。&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://example.docsy.dev/noteself/dairy/2%E6%9C%8811%E6%97%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/noteself/dairy/2%E6%9C%8811%E6%97%A5/</guid>
      <description>&lt;p&gt;太忙了, 忘记写日志了&lt;/p&gt;&#xA;&lt;p&gt;实践了&lt;code&gt;层次递进法&lt;/code&gt; 将任务量缩减分层遍历任务, 逐层深入, 在一天完成了&lt;code&gt;MySQL&lt;/code&gt; 模块的整体结构&lt;/p&gt;&#xA;&lt;p&gt;归纳如下, 遍历层数限制为2层, 当知识点层数超过2层时采取两种策略&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;AI 归纳, 减少搜索深度&lt;/li&gt;&#xA;&lt;li&gt;放弃, 继续广度学习&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;第一种策略很好理解, AI将深度的理论归纳为表层结果, 减少厚度&lt;/p&gt;&#xA;&lt;p&gt;第二种策略的理论基础是, 知识点并非树状而是网状结构&lt;/p&gt;&#xA;&lt;p&gt;并发编程下有子节点&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hamhuo-hub/HamPic/img/img/20250212163428470.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;子节点下还有 &lt;code&gt;孙&lt;/code&gt; 节点&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hamhuo-hub/HamPic/img/img/20250212163437158.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这看起来是层层递进的树结构, 但是总体来看:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hamhuo-hub/HamPic/img/img/20250212163553822.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这是一张网络, 当广度搜索时原先的节点在不同的搜索区域会&lt;code&gt;升级&lt;/code&gt;, 从子节点升级为父节点, 从而达到&#xA;缩小厚度的结果&lt;/p&gt;&#xA;&lt;p&gt;比如搜索路径 并发编程&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hamhuo-hub/HamPic/img/img/20250212164020208.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;此时 &lt;code&gt;AQS&lt;/code&gt; 是第三层节点, 学习自旋锁和CLH锁时就应该放弃&lt;/p&gt;&#xA;&lt;p&gt;放弃后转为广度搜索, 开始遍历之前的二级节点&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hamhuo-hub/HamPic/img/img/20250212164241043.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;此时在广度搜索基础上, &lt;code&gt;AQS&lt;/code&gt; 自动降级了, 通俗来讲就是学习AQS的基础打牢了, 可以将任意的二级节点作为基础向下遍历了&lt;/p&gt;&#xA;&lt;p&gt;上述可知, 层级学习的核心是广度搜索结合深度搜索, 前提是有系统的学习路径, 思想是逐层递进, 优先搭建网络, 之后丰满节点&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;阅读:&lt;/p&gt;&#xA;&lt;p&gt;***问题驱动学习（Problem-Based Learning, PBL）&lt;/p&gt;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://example.docsy.dev/noteself/dairy/2%E6%9C%8819%E6%97%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/noteself/dairy/2%E6%9C%8819%E6%97%A5/</guid>
      <description>&lt;p&gt;站点成功注册到google&#xA;其中几个要点&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;默认的 hugo server 指令会在所有页面拒绝索引, 要使用 hugo &amp;ndash;gc 或者 hugo&lt;/li&gt;&#xA;&lt;li&gt;google收录的sitemap有一个陈年bug, 站点地图必须使用双斜线并且末尾加斜线&lt;/li&gt;&#xA;&lt;li&gt;百度收录推荐用www但是加上前缀会导致跳转, 盲猜是个bug&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://example.docsy.dev/noteself/dairy/2%E6%9C%8820%E6%97%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/noteself/dairy/2%E6%9C%8820%E6%97%A5/</guid>
      <description>&lt;p&gt;项目开始了&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;高兴 加入了天才噜噜噜的群&lt;/li&gt;&#xA;&lt;li&gt;高兴 redis缓存一致模型我一个人搞出来了&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://example.docsy.dev/noteself/dairy/2%E6%9C%8827%E6%97%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/noteself/dairy/2%E6%9C%8827%E6%97%A5/</guid>
      <description>&lt;p&gt;尝试投递了第一批简历, 0面试&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;太着急了, 八股, 力扣没有准备充分, 但是这个不是主要原因&lt;/li&gt;&#xA;&lt;li&gt;主要原因是简历的问题, 拷打业务准备不充分&#xA;解决:&lt;/li&gt;&#xA;&lt;li&gt;10天冲刺计划&#xA;计划:&#xA;- 个人端口完成 2/28&#xA;- 简历完成 2/27&#xA;- 每日力扣 两题, 只做热门题 10天 两遍&#xA;- 面渣背诵加上热门50题 10天 两遍&#xA;- 小组模块完成 3天&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://example.docsy.dev/noteself/dairy/3%E6%9C%8814%E6%97%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/noteself/dairy/3%E6%9C%8814%E6%97%A5/</guid>
      <description>&lt;p&gt;在接收他人观点之前首先明确自己的观点&#xA;否则会被PUA, 他人强加的观点是立不住脚的, 无论表述上是否符合客观事实, 缺少论证的观点任何人都可以拒绝接受&#xA;日常生活中不需要十分谨慎的判断其他人说的每句话, 只要小心反问,诘问具有强烈感情的观点就好&#xA;比如&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;你不现在开始学, 难道是不打算保研了吗?&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;交了这么多钱, 还没办法出国, 你不就是败家吗!&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;呵, 瞎忙活些什么, 一天天的就知道卷, 把宿舍风气都败坏了&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;哼, 早告诉你,你成不了事~&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;对于这些感情色彩强烈的表述, 抛去客观情况不论, 首先立场上就不应该接受, 作为平等个体, 在任何情况下抛出的观点一定是站在说话者自身立场上的. 我们没有任何理由接收他人立场上的观点,&lt;/p&gt;&#xA;&lt;p&gt;但是这存在例外. 只有非常了解某人实际生活和背景的人才能综合种种因素站在他人的立场上抛出观点(比如父母).&lt;/p&gt;&#xA;&lt;p&gt;对于干系至深之人所抛出的观点可能带有强烈感情色彩, 但在反驳之前请三思.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://example.docsy.dev/noteself/dairy/3%E6%9C%881%E6%97%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/noteself/dairy/3%E6%9C%881%E6%97%A5/</guid>
      <description>&lt;p&gt;完成了redis的分页和 redis + mysql 悲观锁的一致双写&#xA;今天通宵完成笔记和国际化模块的工作&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Oauth2+Spring Cloud Gateway的项目架构准备好&lt;/li&gt;&#xA;&lt;li&gt;完成鉴权模型的笔记, 流程图梳理完毕&lt;/li&gt;&#xA;&lt;li&gt;redis的八股, 花点钱买热门50八股开始背&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://example.docsy.dev/noteself/dairy/3%E6%9C%8828%E6%97%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/noteself/dairy/3%E6%9C%8828%E6%97%A5/</guid>
      <description>&lt;p&gt;进入任何新领域之前都应该先找教程, 先找视频教程, 而不是直接上手&lt;/p&gt;&#xA;&lt;h4 id=&#34;final-stage-4-9&#34;&gt;final stage 4-9&lt;/h4&gt;&#xA;&lt;h5 id=&#34;review-stage&#34;&gt;Review stage&lt;/h5&gt;&#xA;&lt;p&gt;Review all java course&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Java se + se note + se interview&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Java web + web note + web interview&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;web Socket&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;gateway&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Spring MVC + mvc note + mvc interview&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Spring Boot + boot note + boot interview&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Spring cloud + cloud note + cloud interview&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Redis&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;microservice&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;MySQL&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://example.docsy.dev/noteself/dairy/3%E6%9C%889%E6%97%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/noteself/dairy/3%E6%9C%889%E6%97%A5/</guid>
      <description>&lt;p&gt;pdd和taotian笔试&#xA;不可谓不惨烈&lt;/p&gt;&#xA;&lt;p&gt;在原子的学习时间内必须有测试看到学习效果&lt;/p&gt;&#xA;&lt;p&gt;提问, 没有问题是不对的, 一定是不专心&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://example.docsy.dev/noteself/dairy/4%E6%9C%889%E6%97%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/noteself/dairy/4%E6%9C%889%E6%97%A5/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://medium.com/%E8%81%B7%E4%BA%BA%E7%B0%A1%E5%A0%B1%E8%88%87%E5%95%86%E6%A5%AD%E6%80%9D%E7%B6%AD/%E4%BA%BA%E7%94%9F%E5%B0%B1%E6%98%AF%E5%9C%A8%E5%8F%96%E6%8D%A8-%E8%80%8C%E8%A6%8B%E8%AD%98%E5%89%87%E8%AE%93%E6%88%91%E5%80%91%E7%95%B6%E5%8F%96%E5%89%87%E5%8F%96-%E7%95%B6%E6%8D%A8%E5%89%87%E6%8D%A8-%E6%9C%89%E4%BA%86%E8%A6%8B%E8%AD%98-%E6%88%91%E5%80%91%E5%89%87%E4%BB%A5%E5%B9%B3%E5%B8%B8%E5%BF%83%E5%8E%BB%E7%9C%8B%E5%BE%85%E4%B8%80%E5%88%87%E9%81%B8%E6%93%87-7b8ba02575f0&#34;&gt;Loss and Go&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;很多看起來非完成不可的事情，其實想通了並沒有那麼重要，因為這些是偽工作。無論是在職場上還是在生活中，提高效率都需要從拒絕偽工作開始。這與前面提到的人生需要減法是同樣的道理。&lt;/p&gt;&#xA;&lt;p&gt;一個人的效率提升到一定程度後就很難再提高，唯一能夠控制的就是&lt;em&gt;&lt;strong&gt;少做一點事情&lt;/strong&gt;&lt;/em&gt;，而不是擠壓時間把所有的事情&lt;em&gt;&lt;strong&gt;隨便做完&lt;/strong&gt;&lt;/em&gt;。&lt;/p&gt;&#xA;&lt;p&gt;找到最重要的工作，並優先完成&lt;/p&gt;&#xA;&lt;p&gt;避免成為偽工作者(消極的接受所有工作，或是從指派的工作中&lt;em&gt;&lt;strong&gt;找一些容易的工作&lt;/strong&gt;&lt;/em&gt;)&lt;/p&gt;&#xA;&lt;p&gt;==永遠超出對方的期待==, 獲得成長空間比薪水重要&lt;/p&gt;&#xA;&lt;p&gt;如果做事情想從五十分的水準提高到九十分，得靠先進的科學和技術。兩個人同樣做一件事，一個人完全靠經驗，另一人掌握了先進的技術，在其他條件相同的情況下，後者一定能做得比前者好。&lt;/p&gt;&#xA;&lt;p&gt;很多時候，事情難以開始，一天拖過一天，是因為目標不切實際、很難實現所導致的，&lt;br&gt;&#xA;因此只要設定切合實際的目標，有了正確的策略，就可以讓心態更積極，避免拖延。&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://example.docsy.dev/noteself/dairy/nextstep/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/noteself/dairy/nextstep/</guid>
      <description>&lt;p&gt;26/3/2024-13/4/2025&#xA;日记结束，完成Java整体学习初步窥探了java奥秘&#xA;春招结束，国内的学习也告一段落。我将离开中国，前往世界至南-新西兰&#xA;我对自己很满意，喜欢软件因此尝试自学java。收获了坚定的意志与更好的自己。结识了许多朋友。&lt;/p&gt;&#xA;&lt;p&gt;接下来，这个博客将成为我的日记本，记录我在未来的成长。&lt;/p&gt;&#xA;&lt;p&gt;14/4/2025&lt;/p&gt;&#xA;&lt;p&gt;@Hamhuo 于北京&lt;/p&gt;</description>
    </item>
    <item>
      <title>Search Results</title>
      <link>https://example.docsy.dev/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/search/</guid>
      <description></description>
    </item>
  </channel>
</rss>
