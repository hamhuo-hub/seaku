<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>159.261 GamingProgramming on Hamhuo</title>
    <link>https://example.docsy.dev/school/159.261/</link>
    <description>Recent content in 159.261 GamingProgramming on Hamhuo</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://example.docsy.dev/school/159.261/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Assignment1</title>
      <link>https://example.docsy.dev/school/159.261/assignment1/assignment1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/school/159.261/assignment1/assignment1/</guid>
      <description>&lt;h1 id=&#34;snake-game--assignment-1&#34;&gt;Snake Game — Assignment 1&lt;/h1&gt;&#xA;&lt;p&gt;&lt;em&gt;by Hamhuo&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;-introduction&#34;&gt;🕹 Introduction&lt;/h2&gt;&#xA;&lt;p&gt;This project is a classic Snake game implemented using Java AWT and a custom GameEngine. &lt;br&gt;&#xA;The player controls a snake moving on a 25×25 grid, growing longer by eating apples. &lt;br&gt;&#xA;The game ends if the snake hits the wall or collides with itself.&lt;/p&gt;&#xA;&lt;h2 id=&#34;-highlights&#34;&gt;✨ Highlights&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-efficient-direction-control&#34;&gt;1. Efficient Direction Control&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The snake&amp;rsquo;s movement direction is managed using &lt;strong&gt;numeric encoding combined with XOR operations&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Direct reversal (e.g., moving from LEFT to RIGHT immediately) is prevented with a simple and efficient one-line check:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#2f1e2e;background-color:#e7e9db;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#815ba4&#34;&gt;if&lt;/span&gt; ((direction.&lt;span style=&#34;color:#06b6ef&#34;&gt;getValue&lt;/span&gt;() &lt;span style=&#34;color:#5bc4bf&#34;&gt;^&lt;/span&gt; d.&lt;span style=&#34;color:#06b6ef&#34;&gt;getValue&lt;/span&gt;()) &lt;span style=&#34;color:#5bc4bf&#34;&gt;!=&lt;/span&gt; 2) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#815ba4&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#06b6ef&#34;&gt;direction&lt;/span&gt; &lt;span style=&#34;color:#5bc4bf&#34;&gt;=&lt;/span&gt; d;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;This approach is cleaner and more efficient than traditional if-else chains.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2-flexible-speed-and-length-configuration&#34;&gt;2. Flexible Speed and Length Configuration&lt;/h3&gt;&#xA;&lt;p&gt;Before starting the game, a settings dialog allows players to customize:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Assignment2</title>
      <link>https://example.docsy.dev/school/159.261/assignment2/assignment2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.docsy.dev/school/159.261/assignment2/assignment2/</guid>
      <description>&lt;h4 id=&#34;目录&#34;&gt;目录&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;游戏引擎&lt;/li&gt;&#xA;&lt;li&gt;游戏架构&#xA;&lt;ul&gt;&#xA;&lt;li&gt;core 核心类库&lt;/li&gt;&#xA;&lt;li&gt;entity 角色实体类&lt;/li&gt;&#xA;&lt;li&gt;role 角色接口&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;开发细节&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Enemies 敌人&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;游戏引擎&#34;&gt;游戏引擎&lt;/h4&gt;&#xA;&lt;p&gt;我们已经有一个基础的游戏引擎类 &lt;code&gt;GameEngine&lt;/code&gt;，该类有如下方法&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250510150432521.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;数学方法&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250510150506105.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;绘图方法&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250510150618208.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;资源加载&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250511112434697.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;接口&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250510150738414.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;监听&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;游戏引擎是一个接口/抽象类，作为最底层的游戏引擎，其封装了游戏绘制运行所需的所有方法。只需要实现游戏引擎的接口即可（需要绘制那些对象/如何绘制），&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;paintCompoent()&lt;/code&gt;方法可视为绘制那些对象&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;update()&lt;/code&gt; 可视为怎样绘制对象&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250511112434697.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;需要重写的接口&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;游戏引擎作为封装游戏加载方法的抽象类，需要实现类编写绘制逻辑。&lt;/p&gt;&#xA;&lt;h4 id=&#34;游戏架构&#34;&gt;游戏架构&lt;/h4&gt;&#xA;&lt;p&gt;敌人，玩家，地图是该游戏最基础的组件并且特殊的实体需要继承相应接口，需要角色接口以及角色类包。&#xA;职责如下&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;移动算法&lt;/li&gt;&#xA;&lt;li&gt;动画逻辑/交互逻辑&lt;/li&gt;&#xA;&lt;li&gt;基础属性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;其中地图较为特殊，地图类负责创建和销毁实体。 &lt;code&gt;GameMap&lt;/code&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;销毁/创建实体&lt;/li&gt;&#xA;&lt;li&gt;地图布局&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;上述实体分别抽象为接口，放在 &lt;code&gt;role&lt;/code&gt; 和 &lt;code&gt;entity&lt;/code&gt; 下&#xA;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/hamhuo-hub/HamPic@img/img/20250511121548345.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;实体结构&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;游戏控制器作为引擎实现类来实际绘制所有游戏的对象 &lt;code&gt;GameController&lt;/code&gt;&#xA;职责如下&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;对象更新&lt;/li&gt;&#xA;&lt;li&gt;资源加载&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;节拍器 &lt;code&gt;Conductor&lt;/code&gt; 负责节奏控制，是所有对象的更新信号并且全局唯一&lt;/p&gt;&#xA;&lt;p&gt;因为动画较多，创建 &lt;code&gt;Animation&lt;/code&gt; 类统一管理&lt;/p&gt;&#xA;&lt;p&gt;以及其他全局枚举，不在此展开&lt;/p&gt;&#xA;&lt;p&gt;包括游戏引擎，上述是游戏核心类，放在 &lt;code&gt;core&lt;/code&gt; 核心类库中&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
